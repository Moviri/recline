this.recline=this.recline||{},this.recline.Backend=this.recline.Backend||{},this.recline.Backend.Ckan=this.recline.Backend.Ckan||{},function(a,b){b.__type__="ckan",b.API_ENDPOINT="http://datahub.io/api",b.fetch=function(d){if(d.endpoint)var e=b.DataStore(d.endpoint);else{var f=b._parseCkanResourceUrl(d.url);d.id=f.resource_id;var e=b.DataStore(f.endpoint)}var g=a.Deferred(),h=e.search({resource_id:d.id,limit:0});return h.done(function(a){var b=_.map(a.result.fields,function(a){return a.type=a.type in c?c[a.type]:a.type,a}),d={fields:b,useMemoryStore:!1};g.resolve(d)}),g.promise()},b._normalizeQuery=function(a,b){var c={resource_id:b.id,q:a.q,limit:a.size||10,offset:a.from||0};if(a.sort&&a.sort.length>0){var d=_.map(a.sort,function(a){return a.field+" "+(a.order||"")});c.sort=d.join(",")}return c},b.query=function(c,d){if(d.endpoint)var e=b.DataStore(d.endpoint);else{var f=b._parseCkanResourceUrl(d.url);d.id=f.resource_id;var e=b.DataStore(f.endpoint)}var g=b._normalizeQuery(c,d),h=a.Deferred(),i=e.search(g);return i.done(function(a){var b={total:a.result.total,hits:a.result.records};h.resolve(b)}),h.promise()},b.DataStore=function(c){var d={endpoint:c||b.API_ENDPOINT};return d.search=function(b){var c=d.endpoint+"/3/action/datastore_search",e=a.ajax({url:c,data:b,dataType:"json"});return e},d},b._parseCkanResourceUrl=function(a){parts=a.split("/");var b=parts.length;return{resource_id:parts[b-1],endpoint:parts.slice(0,[b-4]).join("/")+"/api"}};var c={int4:"integer",int8:"integer",float8:"float"}}(jQuery,this.recline.Backend.Ckan),this.recline=this.recline||{},this.recline.Backend=this.recline.Backend||{},this.recline.Backend.CSV=this.recline.Backend.CSV||{},function(a,b){function g(a){return a.charAt(a.length-1)!=="\n"?a:a.substring(0,a.length-1)}a.fetch=function(c){var d=b.Deferred();if(c.file){var e=new FileReader,f=c.encoding||"UTF-8";e.onload=function(b){var e=a.parseCSV(b.target.result,c);d.resolve({records:e,metadata:{filename:c.file.name},useMemoryStore:!0})},e.onerror=function(a){alert("Failed to load file. Code: "+a.target.error.code)},e.readAsText(c.file,f)}else if(c.data){var g=a.parseCSV(c.data,c);d.resolve({records:g,useMemoryStore:!0})}else c.url&&b.get(c.url).done(function(b){var e=a.parseCSV(b,c);d.resolve({records:e,useMemoryStore:!0})});return d.promise()},a.parseCSV=function(a,b){a=g(a);var b=b||{},e=b.trim===!1?!1:!0,h=b.delimiter||",",i=b.quotechar||'"',j="",k=!1,l=!1,m="",n=[],o=[],p,q;q=function(a){return l!==!0&&(a===""?a=null:e===!0&&(a=f(a)),c.test(a)?a=parseInt(a,10):d.test(a)&&(a=parseFloat(a,10))),a};for(p=0;p<a.length;p+=1)j=a.charAt(p),k!==!1||j!==h&&j!=="\n"?j!==i?m+=j:k?a.charAt(p+1)===i?(m+=i,p+=1):k=!1:(k=!0,l=!0):(m=q(m),n.push(m),j==="\n"&&(o.push(n),n=[]),m="",l=!1);return m=q(m),n.push(m),o.push(n),o},a.serializeCSV=function(a,b){var c=null;if(a instanceof Array)c=a;else{c=[];var d=_.pluck(a.fields,"id");c.push(d),_.each(a.records,function(a,b){var e=_.map(d,function(b){return a[b]});c.push(e)})}var b=b||{},f=b.delimiter||",",g=b.quotechar||'"',h="",i="",j="",k="",l,m,n;n=function(a){return a===null?a="":typeof a=="string"&&e.test(a)?a=g+a+g:typeof a=="number"&&(a=a.toString(10)),a};for(l=0;l<c.length;l+=1){h=c[l];for(m=0;m<h.length;m+=1)i=n(h[m]),m===h.length-1?(j+=i,k+=j+"\n",j=""):j+=i+f,i=""}return k};var c=/^\d+$/,d=/^\d*\.\d+$|^\d+\.\d*$/,e=/^\s|\s$|,|"|\n/,f=function(){return String.prototype.trim?function(a){return a.trim()}:function(a){return a.replace(/^\s*/,"").replace(/\s*$/,"")}}()}(this.recline.Backend.CSV,jQuery),this.recline=this.recline||{},this.recline.Backend=this.recline.Backend||{},this.recline.Backend.DataProxy=this.recline.Backend.DataProxy||{},function(a,b){b.__type__="dataproxy",b.dataproxy_url="http://jsonpdataproxy.appspot.com",b.timeout=5e3,b.fetch=function(d){var e={url:d.url,"max-results":d.size||d.rows||1e3,type:d.format||""},f=a.ajax({url:b.dataproxy_url,data:e,dataType:"jsonp"}),g=a.Deferred();return c(f).done(function(a){a.error&&g.reject(a.error),g.resolve({records:a.data,fields:a.fields,useMemoryStore:!0})}).fail(function(a){g.reject(a)}),g.promise()};var c=function(c){var d=a.Deferred(),e=setTimeout(function(){d.reject({message:"Request Error: Backend did not respond after "+b.timeout/1e3+" seconds"})},b.timeout);return c.done(function(a){clearTimeout(e),d.resolve(a)}).fail(function(a){clearTimeout(e),d.reject(a)}),d.promise()}}(jQuery,this.recline.Backend.DataProxy),this.recline=this.recline||{},this.recline.Backend=this.recline.Backend||{},this.recline.Backend.ElasticSearch=this.recline.Backend.ElasticSearch||{},function(a,b){b.__type__="elasticsearch",b.Wrapper=function(a,b){var d=this;this.endpoint=a,this.options=_.extend({dataType:"json"},b),this.mapping=function(){var a=d.endpoint+"/_mapping",b=c({url:a,dataType:this.options.dataType});return b},this.get=function(a){var b=this.endpoint+"/"+a;return c({url:b,dataType:"json"})},this.upsert=function(a){var b=JSON.stringify(a);return url=this.endpoint,a.id&&(url+="/"+a.id),c({url:url,type:"POST",data:b,dataType:"json"})},this.remove=function(a){return url=this.endpoint,url+="/"+a,c({url:url,type:"DELETE",dataType:"json"})},this._normalizeQuery=function(a){var b=this,c=a&&a.toJSON?a.toJSON():_.extend({},a),d={constant_score:{query:{}}};return c.q?d.constant_score.query={query_string:{query:c.q}}:d.constant_score.query={match_all:{}},c.filters&&c.filters.length&&(d.constant_score.filter={and:[]},_.each(c.filters,function(a){d.constant_score.filter.and.push(b._convertFilter(a))})),d},this._normalizeSort=function(a){var b=_.map(a,function(a){var b={},c=_.clone(a);return delete c.field,b[a.field]=c,b});return b},this._convertFilter=function(a){var b={};return b[a.type]={},a.type==="term"?b.term[a.field]=a.term.toLowerCase():a.type==="geo_distance"&&(b.geo_distance[a.field]=a.point,b.geo_distance.distance=a.distance,b.geo_distance.unit=a.unit),b},this.query=function(a){var b=a&&a.toJSON?a.toJSON():_.extend({},a);b.query=this._normalizeQuery(a),delete b.q,delete b.filters,b.sort&&b.sort.length>0&&(b.sort=this._normalizeSort(b.sort));var d={source:JSON.stringify(b)},e=this.endpoint+"/_search",f=c({url:e,data:d,dataType:this.options.dataType});return f}},b.esOptions={},b.fetch=function(c){var d=new b.Wrapper(c.url,b.esOptions),e=a.Deferred();return d.mapping().done(function(a){if(!a){e.reject({message:"Elastic Search did not return a mapping"});return}var b=_.keys(a)[0],c=_.map(a[b].properties,function(a,b){return a.id=b,a});e.resolve({fields:c})}).fail(function(a){e.reject(a)}),e.promise()},b.save=function(c,d){var e=new b.Wrapper(d.url,b.esOptions);if(c.creates.length+c.updates.length+c.deletes.length>1){var f=a.Deferred();return msg="Saving more than one item at a time not yet supported",alert(msg),f.reject(msg),f.promise()}if(c.creates.length>0)return e.upsert(c.creates[0]);if(c.updates.length>0)return e.upsert(c.updates[0]);if(c.deletes.length>0)return e.remove(c.deletes[0].id)},b.query=function(c,d){var e=a.Deferred(),f=new b.Wrapper(d.url,b.esOptions),g=f.query(c);return g.done(function(a){var b={total:a.hits.total};b.hits=_.map(a.hits.hits,function(a){return!("id"in a._source)&&a._id&&(a._source.id=a._id),a._source}),a.facets&&(b.facets=a.facets),e.resolve(b)}).fail(function(a){var b={title:"Failed: "+a.status+" code",message:a.responseText};e.reject(b)}),e.promise()};var c=function(b,c){var d={};c&&(d={beforeSend:function(a){_.each(c,function(b,c){a.setRequestHeader(c,b)})}});var b=_.extend(d,b);return a.ajax(b)}}(jQuery,this.recline.Backend.ElasticSearch),this.recline=this.recline||{},this.recline.Backend=this.recline.Backend||{},this.recline.Backend.GDocs=this.recline.Backend.GDocs||{},function(a,b){b.__type__="gdocs",b.fetch=function(c){var d=a.Deferred(),e=b.getGDocsAPIUrls(c.url);return function(){var b=a.Deferred();return a.getJSON(e.spreadsheet,function(a){b.resolve({spreadsheetTitle:a.feed.title.$t})}),b.promise()}().then(function(c){a.getJSON(e.worksheet,function(a){var e=b.parseData(a),f=_.map(e.fields,function(a){return{id:a}});d.resolve({metadata:{title:c.spreadsheetTitle+" :: "+e.worksheetTitle,spreadsheetTitle:c.spreadsheetTitle,worksheetTitle:e.worksheetTitle},records:e.records,fields:f,useMemoryStore:!0})})}),d.promise()},b.parseData=function(a,b){var b=b||{},c=b.colTypes||{},d={fields:[],records:[]},e=a.feed.entry||[],f,g,h=/^([\d\.\-]+)\%$/;for(f in e[0])/^gsx/.test(f)&&(g=f.substr(4),d.fields.push(g));return d.records=_.map(e,function(a){var b={};return _.each(d.fields,function(d){var e="gsx$"+d,f=a[e].$t,g;c[d]==="percent"&&h.test(f)&&(g=h.exec(f)[1],f=parseFloat(g)/100),b[d]=f}),b}),d.worksheetTitle=a.feed.title.$t,d},b.getGDocsAPIUrls=function(a){var b=/.*spreadsheet\/ccc?.*key=([^#?&+]+)[^#]*(#gid=([\d]+).*)?/,c=a.match(b),d,e,f;return c?(d=c[1],e=parseInt(c[3])+1,isNaN(e)&&(e=1),f={worksheet:"https://spreadsheets.google.com/feeds/list/"+d+"/"+e+"/public/values?alt=json",spreadsheet:"https://spreadsheets.google.com/feeds/worksheets/"+d+"/public/basic?alt=json"}):(d=a.split("/")[5],e=1,f={worksheet:"https://spreadsheets.google.com/feeds/list/"+d+"/"+e+"/public/values?alt=json",spreadsheet:"https://spreadsheets.google.com/feeds/worksheets/"+d+"/public/basic?alt=json"}),f}}(jQuery,this.recline.Backend.GDocs),this.recline=this.recline||{},this.recline.Backend=this.recline.Backend||{},this.recline.Backend.Memory=this.recline.Backend.Memory||{},function(a,b){b.__type__="memory",b.Store=function(b,c){var d=this;this.data=b,this.distinctFieldsValues={},c?this.fields=c:b&&(this.fields=_.map(b[0],function(a,b){return{id:b,type:"string"}})),this.update=function(a){_.each(d.data,function(b,c){a.id===b.id&&(d.data[c]=a)})},this.remove=function(a){var b=_.reject(d.data,function(b){return a.id===b.id});this.data=b},this.save=function(b,c){var d=this,e=a.Deferred();return _.each(b.updates,function(a){d.update(a)}),_.each(b.deletes,function(a){d.remove(a)}),e.resolve(),e.promise()},this.query=function(b){var c=a.Deferred(),d=b.size||this.data.length,e=b.from||0,f=this.data;f=recline.Data.Filters.applyFiltersOnData(b.filters,f,this.fields),f=this._applyFreeTextQuery(f,b),_.each(b.sort,function(a){var b=a.field;f=_.sortBy(f,function(a){var c=a[b];return c}),a.order=="desc"&&f.reverse()});var g=this.computeFacets(f,b),h={total:f.length,hits:f.slice(e,e+d),facets:g};return c.resolve(h),c.promise()},this.getFacetsOnUnfilteredData=function(a){return this.queryObj!=null&&!_.isEqual(a.facets,this.queryObj)&&this.unfilteredFacets!=null?this.unfilteredFacets:(this.queryObj=a,this.unfilteredFacets=this.computeFacets(this.data,a),this.unfilteredFacets)},this._applyFreeTextQuery=function(a,b){if(b.q){var c=b.q.split(" "),e=_.map(c,function(a){return new RegExp(a.toLowerCase())});a=_.filter(a,function(a){var b=!0;return _.each(e,function(c){var e=!1;_.each(d.fields,function(b){var d=a[b.id];d!==null&&d!==undefined?d=d.toString():d="",e=e||c.test(d.toLowerCase())}),b=b&&e}),b})}return a},this.computeFacets=function(a,b){var c=this,d={};return b.facets?(_.each(b.facets,function(a,b){d[b]=(new recline.Model.Facet({id:b})).toJSON(),d[b].termsall={}}),_.each(a,function(a){_.each(b.facets,function(b,c){var e=b.terms.field,f=a[e],g=d[c];f?g.termsall[f]=g.termsall[f]?{count:g.termsall[f].count+1,value:f}:{count:1,value:f}:g.missing=g.missing+1})}),this.updateDistinctFieldsForFaceting(b),_.each(b.facets,function(a,b){var e=d[b],f=_.difference(c.distinctFieldsValues[b],_.map(e.termsall,function(a){return a.value}));_.each(f,function(a){e.termsall[a]={count:0,value:a}})}),_.each(b.facets,function(a,b){var c=d[b],e=_.map(c.termsall,function(a,b){return{term:a.value,count:a.count}});c.terms=_.sortBy(e,function(a){return-a.count})}),d):d},this.updateDistinctFieldsForFaceting=function(a){var b=this;this.distinctFieldsValues==null&&(this.distinctFieldsValues={});var c=[];_.each(a.facets,function(a,d){a.terms.all_terms&&b.distinctFieldsValues[d]==null&&c.push(d)}),c.length>0&&(_.each(c,function(a){b.distinctFieldsValues[a]=[]}),_.each(b.data,function(a){_.each(c,function(c){b.distinctFieldsValues[c].push(a[c])})})),_.each(c,function(a){b.distinctFieldsValues[a]=_.uniq(b.distinctFieldsValues[a])})},this.transform=function(a){var b=recline.Data.Transform.mapDocs(this.data,a);return _.each(b.updates,function(a,b){d.data[b]=a}),this.save(b)},this.getDataParser=function(a){var b={};_.each(d.fields,function(a){b[a.id]=a});var c=b[a.field],e="string";return c==null?(console.log("Warning could not find field "+a.field+" for dataset "),console.log(d)):e=c.type,recline.Backend.Memory.dataParsers[e]},this.filterFunctions={term:function(a,b,c){var d=c.getDataParser(b),e=d(a[b.field]),f=d(b.term);return e===f},range:function(a,b,c){var e=c.getDataParser(b),f=d(a[b.field]),g=e(b.start),h=e(b.stop);return f>=g&&f<=h}}}}(jQuery,this.recline.Backend.Memory),this.recline=this.recline||{},this.recline.Backend=this.recline.Backend||{},this.recline.Backend.Solr=this.recline.Backend.Solr||{},function(a,b){b.__type__="solr",b.fetch=function(b){var c=a.ajax({url:b.solr||b.url,data:{rows:1,wt:"json"},dataType:"jsonp",jsonp:"json.wrf"}),d=a.Deferred();return c.done(function(a){var b=[];a.response.numFound>0&&(b=_.map(_.keys(a.response.docs[0]),function(a){return{id:a}}));var c={fields:b,useMemoryStore:!1};d.resolve(c)}),d.promise()},b.query=function(b,c){var d=b.q||"*:*",e={q:d,rows:b.size,start:b.from,wt:"json"},f=a.ajax({url:c.solr||c.url,data:e,dataType:"jsonp",jsonp:"json.wrf"}),g=a.Deferred();return f.done(function(a){var b={total:a.response.numFound,hits:a.response.docs};g.resolve(b)}),g.promise()}}(jQuery,this.recline.Backend.Solr),this.recline=this.recline||{},this.recline.Data=this.recline.Data||{},function(a){a.Aggregations={},a.Aggregations.aggregationFunctions={sum:function(a,b){return a==null&&(a=0),a+b},avg:function(a,b){},max:function(a,b){return a==null?b:Math.max(a,b)},min:function(a,b){return a==null?b:Math.min(a,b)},ratioToReport:function(a,b){},ratioToMax:function(a,b){},runningTotal:function(a,b){}},a.Aggregations.initFunctions={sum:function(){},avg:function(){},max:function(){},min:function(){},ratioToReport:function(){},ratioToMax:function(){},runningTotal:function(){}},a.Aggregations.resultingDataType={sum:function(a){return a},avg:function(a){return"float"},max:function(a){return a},min:function(a){return a},ratioToReport:function(a){return"float"},ratioToMax:function(a){return"float"},runningTotal:function(a){return a}},a.Aggregations.finalizeFunctions={sum:function(){},avg:function(a,b,c){a.avg=function(a,b){return function(){var b={};for(var c=0;c<a.length;c++)b[a[c]]=this.sum[a[c]]/this.count;return b}}(b,c),c!=null&&c.length>0&&(a.partitions.avg=function(b,c){return function(){var b={};for(var d=0;d<c.length;d++)a.partitions.sum[c[d]]&&(b[c[d]]={value:a.partitions.sum[c[d]].value/a.partitions.count[c[d]].value,partition:a.partitions.sum[c[d]].partition});return b}}(b,c))},max:function(){},min:function(){},ratioToReport:function(){},ratioToMax:function(){},runningTotal:function(){}},a.Aggregations.tableCalculations={ratioToReport:function(a,b,c,d){return _.each(a,function(a){d[a+"_sum_sum"]>0&&(c[a+"_ratioToReport"]=c[a+"_sum"]/d[a+"_sum_sum"])}),c},ratioToMax:function(a,b,c,d){return _.each(a,function(a){d[a+"_sum_max"]>0&&(c[a+"_ratioToMax"]=c[a+"_sum"]/d[a+"_sum_max"])}),c},runningTotal:function(a,b,c,d){return _.each(a,function(a){b?c[a+"_runningTotal"]=c[a+"_sum"]+b[a+"_runningTotal"]:c[a+"_runningTotal"]=c[a+"_sum"]}),c}};var b=function(a,b,c){var d=c.split("."),e,f;if(d.length>0){e=a,f=b;for(var g=0;g<d.length;g++)arr=d[g].match(/(.*)\[\'?(\d*\w*)\'?\]/i),arr&&arr.length==3?(e=e[arr[1]]?e[arr[1]][arr[2]]:e[d[g]],f=f[arr[1]]?f[arr[1]][arr[2]]:f[d[g]]):(e=e[d[g]],f=f[d[g]])}return _.isEqual(e,f)};a.Aggregations.intersectionObjects=a.Aggregations.intersectObjects=function(a,c){var d=Array.prototype.slice,e=d.call(arguments,1);return _.filter(_.uniq(c),function(c){return _.every(e,function(d){return _.any(d,function(d){var e=b(d,c,a);return e&&_.extend(c,d),e})})})},a.Aggregations.checkTableCalculation=function(b,c){var d=_.intersection(b,["runningTotal","ratioToReport","ratioToMax"]);return d.length>0&&_.each(d,function(b){if(!_.intersection(c.aggregationFunctions,a.Aggregations.tableCalculationDependencies[b]))throw"Data.Aggregation: unable to calculate "+b+", totals aggregation function ["+a.Aggregations.tableCalculationDependencies[b]+"] must be defined"}),d},a.Aggregations.tableCalculationDependencies={runningTotal:[],ratioToReport:["sum"],ratioToMax:["max"]}}(this.recline.Data),this.recline=this.recline||{},this.recline.Data=this.recline.Data||{},function(a){a.Faceting={},a.Faceting.computeFacets=function(a,b){var c=this,d={};return b.facets?(_.each(b.facets,function(a,b){d[b]=(new recline.Model.Facet({id:b})).toJSON(),d[b].termsall={}}),_.each(a,function(a){_.each(b.facets,function(b,c){var e=b.terms.field,f=a[e],g=d[c];f?g.termsall[f]=g.termsall[f]?{count:g.termsall[f].count+1,value:f}:{count:1,value:f}:g.missing=g.missing+1})}),c.updateDistinctFieldsForFaceting(b),_.each(b.facets,function(a,b){var e=d[b],f=_.difference(c.distinctFieldsValues[b],_.map(e.termsall,function(a){return a.value}));_.each(f,function(a){e.termsall[a]={count:0,value:a}})}),_.each(b.facets,function(a,b){var c=d[b],e=_.map(c.termsall,function(a,b){return{term:a.value,count:a.count}});c.terms=_.sortBy(e,function(a){return-a.count})}),d):d},a.Faceting.updateDistinctFieldsForFaceting=function(a){var b=this;this.distinctFieldsValues==null&&(this.distinctFieldsValues={});var c=[];_.each(a.facets,function(a,d){a.terms.all_terms&&b.distinctFieldsValues[d]==null&&c.push(d)}),c.length>0&&(_.each(c,function(a){b.distinctFieldsValues[a]=[]}),_.each(b.data,function(a){_.each(c,function(c){b.distinctFieldsValues[c].push(a[c])})})),_.each(c,function(a){b.distinctFieldsValues[a]=_.uniq(b.distinctFieldsValues[a])})}}(this.recline.Data),this.recline=this.recline||{},this.recline.Data=this.recline.Data||{},this.recline.Data.FieldsUtility=this.recline.Data.FieldsUtility||{},function(a,b){b.setFieldsAttributes=function(a,b){if(b.attributes.fieldLabels)for(var c=0;c<a.length;c++){var d=_.find(b.attributes.fieldLabels,function(b){return b.id==a[c].id});d!=null&&(a[c].label=d.label)}b.attributes.fieldsFormat&&_.each(b.attributes.fieldsFormat,function(b){var c=_.find(a,function(a){return b.id===a.id});c!=null&&(c.format=b.format)}),b.attributes.colorSchema&&_.each(b.attributes.colorSchema,function(b){var c=_.find(a,function(a){return b.field===a.id});c!=null&&(c.colorSchema=b.schema)}),b.attributes.shapeSchema&&_.each(b.attributes.shapeSchema,function(b){var c=_.find(a,function(a){return b.field===a.id});c!=null&&(c.shapeSchema=b.schema)})}}(jQuery,this.recline.Data.FieldsUtility),this.recline=this.recline||{},this.recline.Data=this.recline.Data||{},function(a){a.Format={},a.Formatters={},a.FormattersMODA={integer:function(a){return parseInt(a)},string:function(a){return a!=null?a.toString():null},date:function(a){return(new Date(parseInt(a))).valueOf()},"float":function(a){return parseFloat(a,10)},number:function(a){return parseFloat(a,10)}},a.Format.decimal=d3.format(".00f"),a.Format.scale=function(a){var b=function(a,b){return[0,a*b]};return function(c,d,e){var f={},g;f.axisScale={};var h=b(e,d);if(a.type==="linear"){var i=d3.max(c,function(b){var c=0;return g=0,_.each(a.domain,function(a){c=b.getFieldValue({id:a})>c?b.getFieldValue({id:a}):c,g++}),c*g});_.each(a.domain,function(b,c){var d,e=[h[0],h[1]/g];c%2==1&&a.invertEven?d=[i/g,0]:d=[0,i/g],f.axisScale[b]=d3.scale.linear().domain(d).range(e)}),f.scale=d3.scale.linear().domain([0,i]).range(h)}return f}},a.Formatters.Renderers=function(b,c,d){var e=a.Formatters.RenderersImpl[c.attributes.type];if(e==null)throw"No renderers defined for field type "+c.attributes.type;return e(b,c,d)},a.Formatters.RenderersImpl={object:function(a,b,c){return JSON.stringify(a)},integer:function(a,b,c){var d=b.get("format");return d==="currency_euro"?"€ "+a:a},date:function(a,b,c){var d=b.get("format");return d==null||d=="date"?a:(new Date(a)).toLocaleString()},geo_point:function(a,b,c){return JSON.stringify(a)},number:function(a,b,c){var d=b.get("format");if(d==="percentage")return parseFloat(a.toFixed(2))+"%";if(d==="currency_euro")return"€ "+a;try{return parseFloat(a.toFixed(2))}catch(e){return"N.A."}},string:function(a,b,c){var d=b.get("format");if(d==="markdown"){if(typeof Showdown!="undefined"){var e=new Showdown.converter;return out=e.makeHtml(a),out}return a}return d=="plain"?a:(a&&typeof a=="string"&&(a=a.replace(/(https?:\/\/[^ ]+)/g,'<a href="$1">$1</a>')),a)}}}(this.recline.Data),this.recline=this.recline||{},this.recline.Data=this.recline.Data||{},function(a,b){b.StateManagement={},b.StateManagement.State=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},initialize:function(){},setState:function(b){var c=this,d,e;this.attributes.fromQueryString&&(c.attributes.data=jQuery.deparam(a.param.querystring())),this.attributes.useOnlyFields?(d=_.filter(c.attributes.data.filters,function(a){return _.contains(c.attributes.useOnlyFields,a.field)}),e=_.filter(c.attributes.data.selections,function(a){return _.contains(c.attributes.useOnlyFields,a.field)})):c.attributes.data&&(c.attributes.data.filters&&(d=c.attributes.data.filters),c.attributes.data.selections&&(e=c.attributes.data.selections)),_.each(d,function(a){b.queryState.setFilter(a)}),_.each(e,function(a){b.queryState.setSelection(a)})}}),b.StateManagement.getQueryString=function(b){var c=this.getState(b);return decodeURIComponent(a.param(c))},b.StateManagement.getState=function(a){var b={filters:[],selections:[]};return _.each(a,function(a){a.queryState&&(_.each(a.queryState.get("filters"),function(a){b.filters.push(a)}),_.each(a.queryState.get("selections"),function(a){b.selections.push(a)}))}),b}}(jQuery,this.recline.Data),this.recline=this.recline||{},this.recline.Data=this.recline.Data||{},function(my){my.Transform={},my.Transform.evalFunction=function(funcString){try{eval("var editFunc = "+funcString)}catch(e){return{errorMessage:e+""}}return editFunc},my.Transform.previewTransform=function(a,b,c){var d=[],e=my.Transform.mapDocs($.extend(!0,{},a),b);for(var f=0;f<e.docs.length;f++){var g=a[f],h=e.docs[f];h||(h={}),c?d.push({before:g[c],after:h[c]}):d.push({before:g,after:h})}return d},my.Transform.mapDocs=function(a,b){var c=[],d=[],e=[],f=_.map(a,function(a){try{var f=b(_.clone(a))}catch(g){e.push(a);return}return f===null?(f={_deleted:!0},c.push(f),d.push(a)):f&&!_.isEqual(f,a)&&c.push(f),f});return{updates:c,docs:f,deletes:d,failed:e}},my.Transform.getFieldHash=function(a){return a?isNaN(a)?recline.Data.Transform.hashCode(a):Number(a):"0"},my.Transform.hashCode=function(a){var b=0,c,d;if(a.length==0)return b;for(c=0;c<a.length;c++)d=a.charCodeAt(c),b=(b<<5)-b+d,b&=b;return b}}(this.recline.Data),"indexOf"in Array.prototype||(Array.prototype.indexOf=function(a,b){b===undefined&&(b=0),b<0&&(b+=this.length),b<0&&(b=0);for(var c=this.length;b<c;b++)if(b in this&&this[b]===a)return b;return-1}),"lastIndexOf"in Array.prototype||(Array.prototype.lastIndexOf=function(a,b){b===undefined&&(b=this.length-1),b<0&&(b+=this.length),b>this.length-1&&(b=this.length-1);for(b++;b-->0;)if(b in this&&this[b]===a)return b;return-1}),"forEach"in Array.prototype||(Array.prototype.forEach=function(a,b){for(var c=0,d=this.length;c<d;c++)c in this&&a.call(b,this[c],c,this)}),"map"in Array.prototype||(Array.prototype.map=function(a,b){var c=new Array(this.length);for(var d=0,e=this.length;d<e;d++)d in this&&(c[d]=a.call(b,this[d],d,this));return c}),"filter"in Array.prototype||(Array.prototype.filter=function(a,b){var c=[],d;for(var e=0,f=this.length;e<f;e++)e in this&&a.call(b,d=this[e],e,this)&&c.push(d);return c}),"every"in Array.prototype||(Array.prototype.every=function(a,b){for(var c=0,d=this.length;c<d;c++)if(c in this&&!a.call(b,this[c],c,this))return!1;return!0}),"some"in Array.prototype||(Array.prototype.some=function(a,b){for(var c=0,d=this.length;c<d;c++)if(c in this&&a.call(b,this[c],c,this))return!0;return!1}),this.recline=this.recline||{},this.recline.Model=this.recline.Model||{},function(a,b){b.Dataset=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},initialize:function(){_.bindAll(this,"query"),this.backend=null,this.get("backend")?this.backend=this._backendFromString(this.get("backend")):this.get("records")&&(this.backend=recline.Backend.Memory),this.fields=new b.FieldList,this.records=new b.RecordList,this._changes={deletes:[],updates:[],creates:[]},this.facets=new b.FacetList,this.recordCount=null,this.queryState=new b.Query,this.get("initialState")&&this.get("initialState").setState(this),this.queryState.bind("change",this.query),this.queryState.bind("facet:add",this.query),this._store=this.backend,this.backend==recline.Backend.Memory&&this.fetch()},fetch:function(){function d(a){var d=b._normalizeRecordsAndFields(a.records,a.fields);a.useMemoryStore&&(b._store=new recline.Backend.Memory.Store(d.records,d.fields)),b.set(a.metadata),recline.Data.FieldsUtility.setFieldsAttributes(d.fields,b);var e={renderer:recline.Data.Formatters.Renderers};b.fields.reset(d.fields,e),b.query().done(function(){c.resolve(b)}).fail(function(a){c.reject(a)})}var b=this,c=a.Deferred();return this.backend!==recline.Backend.Memory?this.backend.fetch(this.toJSON()).done(d).fail(function(a){console.log("Fail in fetching data"),c.reject(a)}):d({records:this.get("records"),fields:this.get("fields"),useMemoryStore:!0}),c.promise()},_normalizeRecordsAndFields:function(a,b){!b&&a&&a.length>0&&(a[0]instanceof Array?(b=a[0],a=a.slice(1)):b=_.map(_.keys(a[0]),function(a){return{id:a}}));if(b&&b.length>0&&typeof b[0]!="object"){var c={};b=_.map(b,function(a,b){a=a.toString();var d=a.replace(/^\s+|\s+$/g,"");d===""&&(d="_noname_",a=d);while(d in c)c[a]+=1,d=a+c[a];return a in c||(c[a]=0),{id:d}})}return a&&a.length>0&&a[0]instanceof Array&&(a=_.map(a,function(a){var c={};return _.each(b,function(b,d){c[b.id]=a[d]}),c})),{fields:b,records:a}},save:function(){var a=this;return this._store.save(this._changes,this.toJSON())},transform:function(a){var b=this;if(!this._store.transform){alert("Transform is not supported with this backend: "+this.get("backend"));return}this.trigger("recline:flash",{message:"Updating all visible docs. This could take a while...",persist:!0,loader:!0}),this._store.transform(a).done(function(){b.query(),b.trigger("recline:flash",{message:"Records updated successfully"})})},query:function(b){var c=this,d=a.Deferred();this.trigger("query:start"),b&&this.queryState.set(b,{silent:!0});var e=this.queryState.toJSON();return _.each(c.attributes.customFilterLogic,function(a){a(e)}),console.log("Query on model ["+(c.attributes.id?c.attributes.id:"")+"] query ["+JSON.stringify(e)+"]"),this._store.query(e,this.toJSON()).done(function(a){c._handleQueryResult(a),c.trigger("query:done"),d.resolve(c.records)}).fail(function(a){c.trigger("query:fail",a),d.reject(a)}),d.promise()},_handleQueryResult:function(a){var c=this;c.recordCount=a.total;if(a.fields&&c.fields.length==0){var d={renderer:recline.Data.Formatters.Renderers};c.fields.reset(a.fields,d)}var e=_.map(a.hits,function(a){var d=new b.Record(a);return d.fields=c.fields,d.bind("change",function(a){c._changes.updates.push(a.toJSON())}),d.bind("destroy",function(a){c._changes.deletes.push(a.toJSON())}),d});recline.Data.Filters.applySelectionsOnData(c.queryState.get("selections"),e,c.fields),c.records.reset(e);if(a.facets){var f=_.map(a.facets,function(a,d){a.id=d;var e=new b.Facet(a);return recline.Data.ColorSchema.addColorsToTerms(d,e.attributes.terms,c.attributes.colorSchema),recline.Data.ShapeSchema.addShapesToTerms(d,e.attributes.terms,c.attributes.shapeSchema),e});c.facets.reset(f)}},toTemplateJSON:function(){var a=this.toJSON();return a.recordCount=this.recordCount,a.fields=this.fields.toJSON(),a},getFieldsSummary:function(){var c=this,d=new b.Query;d.set({size:0}),this.fields.each(function(a){d.addFacet(a.id)});var e=a.Deferred();return this._store.query(d.toJSON(),this.toJSON()).done(function(a){a.facets&&_.each(a.facets,function(a,d){a.id=d;var e=new b.Facet(a);c.fields.get(d).facets.reset(e)}),e.resolve(a)}),e.promise()},recordSummary:function(a){return a.summary()},_backendFromString:function(a){var b=null;return recline&&recline.Backend&&_.each(_.keys(recline.Backend),function(c){c.toLowerCase()===a.toLowerCase()&&(b=recline.Backend[c])}),b},getFacetByFieldId:function(a){return _.find(this.facets.models,function(b){return b.id==a})}}),b.Record=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},initialize:function(){_.bindAll(this,"getFieldValue"),this.is_selected=!1},getFieldValue:function(a){var b=this.getFieldValueUnrendered(a);return a.renderer&&(b=a.renderer(b,a,this.toJSON())),b},getFieldValueUnrendered:function(a){var b;try{b=this.get(a.id)}catch(c){throw"Model: unable to read field ["+a.id+"] from dataset"}return a.deriver&&(b=a.deriver(b,a,this)),b},summary:function(a){var b=this,c='<div class="recline-record-summary">';return this.fields.each(function(a){a.id!="id"&&(c+='<div class="'+a.id+'"><strong>'+a.get("label")+"</strong>: "+b.getFieldValue(a)+"</div>")}),c+="</div>",c},fetch:function(){},save:function(){},destroy:function(){this.trigger("destroy",this)}}),b.RecordList=Backbone.Collection.extend({constructor:function(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:b.Record}),b.Field=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:{label:null,type:"string",format:null,is_derived:!1,is_partitioned:!1,colorSchema:null,shapeSchema:null},virtualModelFields:{label:null,type:"string",format:null,is_derived:!1,is_partitioned:!1,partitionValue:null,partitionField:null,originalField:null,colorSchema:null,aggregationFunction:null},initialize:function(a,c){if("0"in a)throw new Error("Looks like you did not pass a proper hash with id to Field constructor");this.attributes.label===null&&this.set({label:this.id}),this.attributes.type.toLowerCase()in this._typeMap&&(this.attributes.type=this._typeMap[this.attributes.type.toLowerCase()]),c&&(this.renderer=c.renderer,this.deriver=c.deriver),!this.deriver&&a.deriver&&(this.deriver=a.deriver),this.renderer||(this.renderer=this.defaultRenderers[this.get("type")]),this.facets=new b.FacetList},_typeMap:{text:"string","double":"number","float":"number",numeric:"number","int":"integer",datetime:"date-time",bool:"boolean",timestamp:"date-time",json:"object"},defaultRenderers:{object:function(a,b,c){return JSON.stringify(a)},geo_point:function(a,b,c){return JSON.stringify(a)},number:function(a,b,c){var d=b.get("format");return d==="percentage"?a+"%":a},string:function(a,b,c){var d=b.get("format");if(d==="markdown"){if(typeof Showdown!="undefined"){var e=new Showdown.converter;return out=e.makeHtml(a),out}return a}return d=="plain"?a:(a&&typeof a=="string"&&(a=a.replace(/(https?:\/\/[^ ]+)/g,'<a href="$1">$1</a>')),a)},date:function(a,b,c){var d=parseInt(a);return!isNaN(d)&&isFinite(a)?d:new Date(a)}}}),b.FieldList=Backbone.Collection.extend({constructor:function(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:b.Field}),b.Query=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:function(){return{from:0,q:"",facets:{},filters:[],selections:[]}},_filterTemplates:{term:{type:"term",field:"",term:""},termAdvanced:{type:"term",operator:"eq",field:"",term:""},list:{type:"term",field:"",list:[]},range:{type:"range",field:"",start:"",stop:""},geo_distance:{type:"geo_distance",distance:10,unit:"km",point:{lon:0,lat:0}}},_selectionTemplates:{term:{type:"term",field:"",term:""},range:{type:"range",field:"",start:"",stop:""}},addFilter:function(a){var b=JSON.parse(JSON.stringify(a));_.keys(a).length<=3&&(b=_.extend(this._filterTemplates[a.type],b));var c=this.get("filters");c.push(b),this.trigger("change:filters:new-blank")},getFilters:function(){return this.get("filters")},getFilterByFieldName:function(a){var b=_.find(this.get("filters"),function(b){return b.field==a});return b==-1?null:b},setFilter:function(a){if(a.remove)this.removeFilterByField(a.field),delete a.remove;else{var b=this.get("filters"),c=!1;for(var d=0;d<b.length;d++)b[d].field==a.field&&(b[d]=a,c=!0);c||b.push(a)}},removeFilter:function(a){var b=this.get("filters");b.splice(a,1),this.set({filters:b}),this.trigger("change")},removeFilterByField:function(a){var b=this.get("filters");for(var c in b)b[c].field==a&&this.removeFilter(c)},clearFilter:function(a){var b=this.get("filters");for(var c in b)if(
b[c].field==a){b[c].term=null,b[c].start=null,b[c].stop=null;break}},addSortCondition:function(a,b){var c=this.get("sort");c?c.push({field:a,order:b}):c=[{field:a,order:b}],this.attributes.sort=c,this.trigger("change:filters:sort")},setSortCondition:function(a){var b=this.get("sort");b?b.push(a):b=[a],this.attributes.sort=b},clearSortCondition:function(){this.attributes.sort=null},addFacet:function(a,b){this.addFacetNoEvent(a,b),this.trigger("facet:add",this)},addFacetNoEvent:function(a,b){var c=this.get("facets");if(_.contains(_.keys(c),a))return;var d=!1;b&&(d=!0),c[a]={terms:{field:a,all_terms:d}},this.set({facets:c},{silent:!0})},addHistogramFacet:function(a){var b=this.get("facets");b[a]={date_histogram:{field:a,interval:"day"}},this.set({facets:b},{silent:!0}),this.trigger("facet:add",this)}}),b.Facet=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:function(){return{_type:"terms",total:0,other:0,missing:0,terms:[]}}}),b.FacetList=Backbone.Collection.extend({constructor:function(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:b.Facet}),b.ObjectState=Backbone.Model.extend({}),Backbone.sync=function(a,b,c){return b.backend.sync(a,b,c)}}(jQuery,this.recline.Model),this.recline=this.recline||{},this.recline.Template=this.recline.Template||{},this.recline.Template.Shapes=this.recline.Template.Shapes||{},function(a,b){b.Shapes={circle:function(a,c,d){var e='<circle cx="100" cy="50" r="40" stroke="black" stroke-width="2" fill="{{color}}"/>',f={color:a};return b._internalDataConversion(c,d,e,f)},empty:function(a,c,d){b._internalDataConversion(c,d,"")}},b._internalDataConversion=function(a,b,c,d){b&&(c="<svg>"+c+"</svg>");var e=Mustache.render(c,d);return a?jQuery(e):e}}(jQuery,this.recline.Template),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){b.Graph=Backbone.View.extend({template:'     <div class="recline-graph">       <div class="panel graph" style="display: block;">         <div class="js-temp-notice alert alert-block">           <h3 class="alert-heading">Hey there!</h3>           <p>There\'s no graph here yet because we don\'t know what fields you\'d like to see plotted.</p>           <p>Please tell us by <strong>using the menu on the right</strong> and a graph will automatically appear.</p>         </div>       </div>     </div> ',initialize:function(c){var d=this;this.graphColors=["#edc240","#afd8f8","#cb4b4b","#4da74d","#9440ed"],this.el=a(this.el),_.bindAll(this,"render","redraw"),this.needToRedraw=!1,this.model.bind("change",this.render),this.model.fields.bind("reset",this.render),this.model.fields.bind("add",this.render),this.model.records.bind("add",this.redraw),this.model.records.bind("reset",this.redraw);var e=_.extend({group:null,series:[],graphType:"lines-and-points"},c.state);this.state=new recline.Model.ObjectState(e),this.editor=new b.GraphControls({model:this.model,state:this.state.toJSON()}),this.editor.state.bind("change",function(){d.state.set(d.editor.state.toJSON()),d.redraw()}),this.elSidebar=this.editor.el},render:function(){var b=this,c=this.model.toTemplateJSON(),d=Mustache.render(this.template,c);return a(this.el).html(d),this.$graph=this.el.find(".panel.graph"),this},redraw:function(){var a=!jQuery.expr.filters.hidden(this.el[0]);if(!a||this.model.records.length===0){this.needToRedraw=!0;return}if(this.state.get("group")&&this.state.get("series")){this.$graph.width(this.el.width()-20);var b=this.createSeries(),c=this.getGraphOptions(this.state.attributes.graphType);this.plot=Flotr.draw(this.$graph.get(0),b,c)}},show:function(){this.needToRedraw&&this.redraw()},getGraphOptions:function(a){var b=this,c=function(a){return e(a)},d=function(a){var c=a.x,d=a.y;if(b.state.attributes.graphType==="bars"){var f=c;c=d,d=f}c=e(c);var g=_.template("<%= group %> = <%= x %>, <%= series %> = <%= y %>",{group:b.state.attributes.group,x:c,series:a.series.label,y:d});return g},e=function(a){var c=b.model.fields.get(b.state.attributes.group),d=c.get("type"),e=d==="date"||d==="date-time"||d==="time";return b.model.records.models[parseInt(a)]?(a=b.model.records.models[parseInt(a)].get(b.state.attributes.group),e&&(a=(new Date(a)).toLocaleDateString())):e&&(a=(new Date(parseInt(a))).toLocaleDateString()),a},f={};f.tickFormatter=c;var g={};g.autoscale=!0,g.autoscaleMargin=.02;var h={};h.track=!0,h.relative=!0,h.trackFormatter=d;var i={};i.position="ne";var j={lines:{legend:i,colors:this.graphColors,lines:{show:!0},xaxis:f,yaxis:g,mouse:h},points:{legend:i,colors:this.graphColors,points:{show:!0,hitRadius:5},xaxis:f,yaxis:g,mouse:h,grid:{hoverable:!0,clickable:!0}},"lines-and-points":{legend:i,colors:this.graphColors,points:{show:!0,hitRadius:5},lines:{show:!0},xaxis:f,yaxis:g,mouse:h,grid:{hoverable:!0,clickable:!0}},bars:{legend:i,colors:this.graphColors,lines:{show:!1},xaxis:g,yaxis:f,mouse:{track:!0,relative:!0,trackFormatter:d,fillColor:"#FFFFFF",fillOpacity:.3,position:"e"},bars:{show:!0,horizontal:!0,shadowSize:0,barWidth:.8}},columns:{legend:i,colors:this.graphColors,lines:{show:!1},xaxis:f,yaxis:g,mouse:{track:!0,relative:!0,trackFormatter:d,fillColor:"#FFFFFF",fillOpacity:.3,position:"n"},bars:{show:!0,horizontal:!1,shadowSize:0,barWidth:.8}},grid:{hoverable:!0,clickable:!0}};return b.state.get("graphOptions")?_.extend(j[a],b.state.get("graphOptions")):j[a]},createSeries:function(){var a=this,b=[];return _.each(this.state.attributes.series,function(c){var d=[];_.each(a.model.records.models,function(b,e){var f=a.model.fields.get(a.state.attributes.group),g=b.getFieldValue(f),h=f.get("type"),i=h==="date"||h==="date-time"||h==="time";i?a.state.attributes.graphType!="bars"&&a.state.attributes.graphType!="columns"?g=(new Date(g)).getTime():g=e:typeof g=="string"&&(g=parseFloat(g),isNaN(g)&&(g=e));var j=a.model.fields.get(c),k=b.getFieldValue(j);a.state.attributes.graphType=="bars"?d.push([k,g]):d.push([g,k])}),b.push({data:d,label:c,mouse:{lineColor:a.graphColors[b.length]}})}),b}}),b.GraphControls=Backbone.View.extend({className:"editor",template:'   <div class="editor">     <form class="form-stacked">       <div class="clearfix">         <label>Graph Type</label>         <div class="input editor-type">           <select>           <option value="lines-and-points">Lines and Points</option>           <option value="lines">Lines</option>           <option value="points">Points</option>           <option value="bars">Bars</option>           <option value="columns">Columns</option>           </select>         </div>         <label>Group Column (x-axis)</label>         <div class="input editor-group">           <select>           <option value="">Please choose ...</option>           {{#fields}}           <option value="{{id}}">{{label}}</option>           {{/fields}}           </select>         </div>         <div class="editor-series-group">         </div>       </div>       <div class="editor-buttons">         <button class="btn editor-add">Add Series</button>       </div>       <div class="editor-buttons editor-submit" comment="hidden temporarily" style="display: none;">         <button class="editor-save">Save</button>         <input type="hidden" class="editor-id" value="chart-1" />       </div>     </form>   </div> ',templateSeriesEditor:'     <div class="editor-series js-series-{{seriesIndex}}">       <label>Series <span>{{seriesName}} (y-axis)</span>         [<a href="#remove" class="action-remove-series">Remove</a>]       </label>       <div class="input">         <select>         {{#fields}}         <option value="{{id}}">{{label}}</option>         {{/fields}}         </select>       </div>     </div>   ',events:{"change form select":"onEditorSubmit","click .editor-add":"_onAddSeries","click .action-remove-series":"removeSeries"},initialize:function(b){var c=this;this.el=a(this.el),_.bindAll(this,"render"),this.model.fields.bind("reset",this.render),this.model.fields.bind("add",this.render),this.state=new recline.Model.ObjectState(b.state),this.render()},render:function(){var a=this,b=this.model.toTemplateJSON(),c=Mustache.render(this.template,b);this.el.html(c),this.state.get("graphType")&&this._selectOption(".editor-type",this.state.get("graphType")),this.state.get("group")&&this._selectOption(".editor-group",this.state.get("group"));var d=[""];return this.state.get("series").length>0&&(d=this.state.get("series")),_.each(d,function(b,c){a.addSeries(c),a._selectOption(".editor-series.js-series-"+c,b)}),this},_selectOption:function(b,c){var d=this.el.find(b+" select > option");d&&d.each(function(b){if(this.value==c)return a(this).attr("selected","selected"),!1})},onEditorSubmit:function(b){var c=this.el.find(".editor-group select"),d=this,e=this.el.find(".editor-series select"),f=e.map(function(){return a(this).val()}),g={series:a.makeArray(f),group:this.el.find(".editor-group select").val(),graphType:this.el.find(".editor-type select").val()};this.state.set(g)},addSeries:function(a){var b=_.extend({seriesIndex:a,seriesName:String.fromCharCode(a+64+1)},this.model.toTemplateJSON()),c=Mustache.render(this.templateSeriesEditor,b);return this.el.find(".editor-series-group").append(c),this},_onAddSeries:function(a){a.preventDefault(),this.addSeries(this.state.get("series").length)},removeSeries:function(b){b.preventDefault();var c=a(b.target);c.parent().parent().remove(),this.onEditorSubmit()}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){b.Grid=Backbone.View.extend({tagName:"div",className:"recline-grid-container",initialize:function(b){var c=this;this.el=a(this.el),_.bindAll(this,"render","onHorizontalScroll"),this.model.records.bind("add",this.render),this.model.records.bind("reset",this.render),this.model.records.bind("remove",this.render),this.tempState={};var d=_.extend({hiddenFields:[]},b.state);this.state=new recline.Model.ObjectState(d)},events:{},setColumnSort:function(a){var b=[{}];b[0][this.tempState.currentColumn]={order:a},this.model.query({sort:b})},hideColumn:function(){var a=this.state.get("hiddenFields");a.push(this.tempState.currentColumn),this.state.set({hiddenFields:a}),this.state.trigger("change"),this.render()},showColumn:function(b){var c=_.without(this.state.get("hiddenFields"),a(b.target).data("column"));this.state.set({hiddenFields:c}),this.render()},onHorizontalScroll:function(b){var c=a(b.target).scrollLeft();this.el.find(".recline-grid thead tr").scrollLeft(c)},template:'     <div class="table-container">     <table class="recline-grid table-striped table-condensed" cellspacing="0">       <thead class="fixed-header">         <tr>           {{#fields}}             <th class="column-header {{#hidden}}hidden{{/hidden}}" data-field="{{id}}" style="width: {{width}}px; max-width: {{width}}px; min-width: {{width}}px;" title="{{label}}">               <span class="column-header-name">{{label}}</span>             </th>           {{/fields}}           <th class="last-header" style="width: {{lastHeaderWidth}}px; max-width: {{lastHeaderWidth}}px; min-width: {{lastHeaderWidth}}px; padding: 0; margin: 0;"></th>         </tr>       </thead>       <tbody class="scroll-content"></tbody>     </table>     </div>   ',toTemplateJSON:function(){var a=this,b=this.model.toJSON();return b.notEmpty=this.fields.length>0,b.fields=_.map(this.fields,function(a){return a.toJSON()}),b.lastHeaderWidth=this.scrollbarDimensions.width-2,b},render:function(){var c=this;this.fields=this.model.fields.filter(function(a){return _.indexOf(c.state.get("hiddenFields"),a.id)==-1}),this.scrollbarDimensions=this.scrollbarDimensions||this._scrollbarSize();var d=this.fields.length,e=c.el.width()-20-10*d-this.scrollbarDimensions.width,f=parseInt(Math.max(50,e/d)),g=Math.max(e-d*f,0);_.each(this.fields,function(a,b){b==0?a.set({width:f+g}):a.set({width:f})});var h=Mustache.render(this.template,this.toTemplateJSON());this.el.html(h),this.model.records.forEach(function(d){var e=a("<tr />");c.el.find("tbody").append(e);var f=new b.GridRow({model:d,el:e,fields:c.fields});f.render()});var i=this.el.find("tbody")[0];return i.scrollHeight<=i.offsetHeight&&this.el.find("th.last-header").hide(),this.el.find(".recline-grid").toggleClass("no-hidden",c.state.get("hiddenFields").length===0),this.el.find(".recline-grid tbody").scroll(this.onHorizontalScroll),this},_scrollbarSize:function(){var b=a("<div style='position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;'></div>").appendTo("body"),c={width:b.width()-b[0].clientWidth+1,height:b.height()-b[0].clientHeight};return b.remove(),c}}),b.GridRow=Backbone.View.extend({initialize:function(b){_.bindAll(this,"render"),this._fields=b.fields,this.el=a(this.el),this.model.bind("change",this.render)},template:'       {{#cells}}       <td data-field="{{field}}" style="width: {{width}}px; max-width: {{width}}px; min-width: {{width}}px;">         <div class="data-table-cell-content">           <a href="javascript:{}" class="data-table-cell-edit" title="Edit this cell">&nbsp;</a>           <div class="data-table-cell-value">{{{value}}}</div>         </div>       </td>       {{/cells}}     ',events:{"click .data-table-cell-edit":"onEditClick","click .data-table-cell-editor .okButton":"onEditorOK","click .data-table-cell-editor .cancelButton":"onEditorCancel"},toTemplateJSON:function(){var a=this,b=this.model,c=this._fields.map(function(a){return{field:a.id,width:a.get("width"),value:b.getFieldValue(a)}});return{id:this.id,cells:c}},render:function(){this.el.attr("data-id",this.model.id);var b=Mustache.render(this.template,this.toTemplateJSON());return a(this.el).html(b),this},cellEditorTemplate:'     <div class="menu-container data-table-cell-editor">       <textarea class="data-table-cell-editor-editor" bind="textarea">{{value}}</textarea>       <div id="data-table-cell-editor-actions">         <div class="data-table-cell-editor-action">           <button class="okButton btn primary">Update</button>           <button class="cancelButton btn danger">Cancel</button>         </div>       </div>     </div>   ',onEditClick:function(b){var c=this.el.find(".data-table-cell-editor-editor");c.length>0&&c.parents(".data-table-cell-value").html(c.text()).siblings(".data-table-cell-edit").removeClass("hidden"),a(b.target).addClass("hidden");var d=a(b.target).siblings(".data-table-cell-value");d.data("previousContents",d.text());var e=Mustache.render(this.cellEditorTemplate,{value:d.text()});d.html(e)},onEditorOK:function(b){var c=this,d=a(b.target),e=d.parents("tr").attr("data-id"),f=d.parents("td").attr("data-field"),g=d.parents(".data-table-cell-editor").find(".data-table-cell-editor-editor").val(),h={};h[f]=g,this.model.set(h),this.trigger("recline:flash",{message:"Updating row...",loader:!0}),this.model.save().then(function(a){this.trigger("recline:flash",{message:"Row updated successfully",category:"success"})}).fail(function(){this.trigger("recline:flash",{message:"Error saving row",category:"error",persist:!0})})},onEditorCancel:function(b){var c=a(b.target).parents(".data-table-cell-value");c.html(c.data("previousContents")).siblings(".data-table-cell-edit").removeClass("hidden")}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){b.Map=Backbone.View.extend({template:'     <div class="recline-map">       <div class="panel map"></div>     </div> ',latitudeFieldNames:["lat","latitude"],longitudeFieldNames:["lon","longitude"],geometryFieldNames:["geojson","geom","the_geom","geometry","spatial","location","geo","lonlat"],initialize:function(c){var d=this;this.el=a(this.el),this.visible=!0,this.mapReady=!1,this.map=null,this.uid=c.id||""+(new Date).getTime()+Math.floor(Math.random()*1e4);var e=_.extend({geomField:null,lonField:null,latField:null,autoZoom:!0,cluster:!1},c.state);this.state=new recline.Model.ObjectState(e),this._clusterOptions={zoomToBoundsOnClick:!0,maxClusterRadius:80,singleMarkerMode:!1,skipDuplicateAddTesting:!0,animateAddingMarkers:!1},this.model.fields.bind("change",function(){d._setupGeometryField(),d.render()}),this.model.records.bind("add",function(a){d.redraw("add",a)}),this.model.records.bind("change",function(a){d.redraw("remove",a),d.redraw("add",a)}),this.model.records.bind("remove",function(a){d.redraw("remove",a)}),this.model.records.bind("reset",function(){d.redraw("reset")}),this.menu=new b.MapMenu({model:this.model,state:this.state.toJSON()}),this.menu.state.bind("change",function(){d.state.set(d.menu.state.toJSON()),d.redraw()}),this.state.bind("change",function(){d.redraw()}),this.elSidebar=this.menu.el},infobox:function(a){var b="";for(key in a.attributes)if(!this.state.get("geomField")||key!=this.state.get("geomField"))b+="<div><strong>"+key+"</strong>: "+a.attributes[key]+"</div>";return b},geoJsonLayerOptions:{pointToLayer:function(a,b){var c=new L.Marker(b);return c.bindPopup(a.properties.popupContent),this.markers.addLayer(c),c},onEachFeature:function(a,b){a.properties&&a.properties.popupContent&&b.bindPopup(a.properties.popupContent)}},render:function(){var b=this;return htmls=Mustache.render(this.template,this.model.toTemplateJSON()),a(this.el).html(htmls),this.$map=this.el.find(".panel.map"),this.redraw(),this},redraw:function(a,b){var c=this;a=a||"refresh",c._geomReady()||c._setupGeometryField(),c.mapReady||c._setupMap();if(this._geomReady()&&this.mapReady){this.map.removeLayer(this.features),this.map.removeLayer(this.markers);var d=0;this.features.eachLayer(function(){d++}),a=="refresh"||a=="reset"?(this.features.clearLayers(),this.map.removeLayer(this.markers),this.markers=new L.MarkerClusterGroup(this._clusterOptions),this._add(this.model.records.models)):a=="add"&&b?this._add(b):a=="remove"&&b&&this._remove(b);var e=0;this.features.eachLayer(function(){e++});var f=e-d>0;if(!this.state.get("cluster")&&e>64&&f){this.state.set({cluster:!0});return}this.state.get("cluster")?this.map.addLayer(this.markers):this.map.addLayer(this.features),this.state.get("autoZoom")&&(this.visible?this._zoomToFeatures():this._zoomPending=!0)}},show:function(){this.map&&(this.map.invalidateSize(),this._zoomPending&&this.state.get("autoZoom")&&(this._zoomToFeatures(),this._zoomPending=!1)),this.visible=!0},hide:function(){this.visible=!1},_geomReady:function(){return Boolean(this.state.get("geomField")||this.state.get("latField")&&this.state.get("lonField"))},_add:function(a){var b=this;a instanceof Array||(a=[a]);var c=0,d=0;_.every(a,function(a){c+=1;var e=b._getGeometryFromRecord(a);if(typeof e=="undefined"||e===null)return!0;if(e instanceof Object){e.properties={popupContent:b.infobox(a),cid:a.cid};try{b.features.addData(e)}catch(f){d+=1;var g="Wrong geometry value";f.message&&(g+=" ("+f.message+")"),d<=10&&b.trigger("recline:flash",{message:g,category:"error"})}}else d+=1,d<=10&&b.trigger("recline:flash",{message:"Wrong geometry value",category:"error"});return!0})},_remove:function(a){var b=this;a instanceof Array||(a=[a]),_.each(a,function(a){for(key in b.features._layers)b.features._layers[key].feature.properties.cid==a.cid&&b.features.removeLayer(b.features._layers[key])})},_getGeometryFromRecord:function(b){if(this.state.get("geomField")){var c=b.get(this.state.get("geomField"));if(typeof c=="string")try{c=a.parseJSON(c)}catch(d){}if(typeof c=="string"){c=c.replace("(","").replace(")","");var e=c.split(","),f=parseFloat(e[0]),g=parseFloat(e[1]);return!isNaN(g)&&!isNaN(parseFloat(f))?{type:"Point",coordinates:[g,f]}:null}return c&&_.isArray(c)?{type:"Point",coordinates:[c[0],c[1]]}:c&&c.lat?{type:"Point",coordinates:[c.lon||c.lng,c.lat]}:c}if(this.state.get("lonField")&&this.state.get("latField")){var g=b.get(this.state.get("lonField")),f=b.get(this.state.get("latField"));if(!isNaN(parseFloat(g))&&!isNaN(parseFloat(f)))return{type:"Point",coordinates:[g,f]}}return null},_setupGeometryField:function(){this._geomReady()||(this.state.set({geomField:this._checkField(this.geometryFieldNames),latField:this._checkField(this.latitudeFieldNames),lonField:this._checkField(this.longitudeFieldNames)}),this.menu.state.set(this.state.toJSON()))},_checkField:function(a){var b,c=this.model.fields.pluck("id");for(var d=0;d<a.length;d++)for(var e=0;e<c.length;e++)if(c[e].toLowerCase()==a[d].toLowerCase())return c[e];return null},_zoomToFeatures:function(){var a=this.features.getBounds();a&&a.getNorthEast()&&a.getSouthWest()?this.map.fitBounds(a):this.map.setView([0,0],2)},_setupMap:function(){var a=this;this.map=new L.Map(this.$map.get(0));var b="http://otile{s}.mqcdn.com/tiles/1.0.0/osm/{z}/{x}/{y}.png",c='Map data &copy; 2011 OpenStreetMap contributors, Tiles Courtesy of <a href="http://www.mapquest.com/" target="_blank">MapQuest</a> <img src="http://developer.mapquest.com/content/osm/mq_logo.png">',d=new L.TileLayer(b,{maxZoom:18,attribution:c,subdomains:"1234"});this.map.addLayer(d),this.markers=new L.MarkerClusterGroup(this._clusterOptions),this.geoJsonLayerOptions.pointToLayer=_.bind(this.geoJsonLayerOptions.pointToLayer,this),this.features=new L.GeoJSON(null,this.geoJsonLayerOptions),this.map.setView([0,0],2),this.mapReady=!0},_selectOption:function(b,c){var d=a("."+b+" > select > option");d&&d.each(function(b){if(this.value==c)return a(this).attr("selected","selected"),!1})}}),b.MapMenu=Backbone.View.extend({className:"editor",template:'     <form class="form-stacked">       <div class="clearfix">         <div class="editor-field-type">             <label class="radio">               <input type="radio" id="editor-field-type-latlon" name="editor-field-type" value="latlon" checked="checked"/>               Latitude / Longitude fields</label>             <label class="radio">               <input type="radio" id="editor-field-type-geom" name="editor-field-type" value="geom" />               GeoJSON field</label>         </div>         <div class="editor-field-type-latlon">           <label>Latitude field</label>           <div class="input editor-lat-field">             <select>             <option value=""></option>             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}             </select>           </div>           <label>Longitude field</label>           <div class="input editor-lon-field">             <select>             <option value=""></option>             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}             </select>           </div>         </div>         <div class="editor-field-type-geom" style="display:none">           <label>Geometry field (GeoJSON)</label>           <div class="input editor-geom-field">             <select>             <option value=""></option>             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}             </select>           </div>         </div>       </div>       <div class="editor-buttons">         <button class="btn editor-update-map">Update</button>       </div>       <div class="editor-options" >         <label class="checkbox">           <input type="checkbox" id="editor-auto-zoom" value="autozoom" checked="checked" />           Auto zoom to features</label>         <label class="checkbox">           <input type="checkbox" id="editor-cluster" value="cluster"/>           Cluster markers</label>       </div>       <input type="hidden" class="editor-id" value="map-1" />       </div>     </form>   ',events:{"click .editor-update-map":"onEditorSubmit","change .editor-field-type":"onFieldTypeChange","click #editor-auto-zoom":"onAutoZoomChange","click #editor-cluster":"onClusteringChange"},initialize:function(b){var c=this;this.el=a(this.el),_.bindAll(this,"render"),this.model.fields.bind("change",this.render),this.state=new recline.Model.ObjectState(b.state),this.state.bind("change",this.render),this.render()},render:function(){var b=this;return htmls=Mustache.render(this.template,this.model.toTemplateJSON()),a(this.el).html(htmls),this._geomReady()&&this.model.fields.length&&(this.state.get("geomField")?(this._selectOption("editor-geom-field",this.state.get("geomField")),this.el.find("#editor-field-type-geom").attr("checked","checked").change()):(this._selectOption("editor-lon-field",this.state.get("lonField")),this._selectOption("editor-lat-field",this.state.get("latField")),this.el.find("#editor-field-type-latlon").attr("checked","checked").change())),this.state.get("autoZoom")?this.el.find("#editor-auto-zoom").attr("checked","checked"):this.el.find("#editor-auto-zoom").removeAttr("checked"),this.state.get("cluster")?this.el.find("#editor-cluster").attr("checked","checked"):this.el.find("#editor-cluster").removeAttr("checked"),this},_geomReady:function(){return Boolean(this.state.get("geomField")||this.state.get("latField")&&this.state.get("lonField"))},onEditorSubmit:function(a){return a.preventDefault(),this.el.find("#editor-field-type-geom").attr("checked")?this.state.set({geomField:this.el.find(".editor-geom-field > select > option:selected").val(),lonField:null,latField:null}):this.state.set({geomField:null,lonField:this.el.find(".editor-lon-field > select > option:selected").val(),latField:this.el.find(".editor-lat-field > select > option:selected").val()}),!1},onFieldTypeChange:function(a){a.target.value=="geom"?(this.el.find(".editor-field-type-geom").show(),this.el.find(".editor-field-type-latlon").hide()):(this.el.find(".editor-field-type-geom").hide(),this.el.find(".editor-field-type-latlon").show())},onAutoZoomChange:function(a){this.state.set({autoZoom:!this.state.get("autoZoom")})},onClusteringChange:function(a){this.state.set({cluster:!this.state.get("cluster")})},_selectOption:function(b,c){var d=this.el.find("."+b+" > select > option");d&&d.each(function(b){if(this.value==c)return a(this).attr("selected","selected"),!1})}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){b.MultiView=Backbone.View.extend({template:'   <div class="recline-data-explorer">     <div class="alert-messages"></div>         <div class="header clearfix">       <div class="navigation">         <div class="btn-group" data-toggle="buttons-radio">         {{#views}}         <a href="#{{id}}" data-view="{{id}}" class="btn">{{label}}</a>         {{/views}}         </div>       </div>       <div class="recline-results-info">         <span class="doc-count">{{recordCount}}</span> records      </div>       <div class="menu-right">         <div class="btn-group" data-toggle="buttons-checkbox">           {{#sidebarViews}}           <a href="#" data-action="{{id}}" class="btn active">{{label}}</a>           {{/sidebarViews}}         </div>       </div>       <div class="query-editor-here" style="display:inline;"></div>     </div>     <div class="data-view-sidebar"></div>     <div class="data-view-container"></div>   </div>   ',events:{"click .menu-right a":"_onMenuClick","click .navigation a":"_onSwitchView"},initialize:function(c){var d=this;this.el=a(this.el),this._setupState(c.state),c.views?this.pageViews=c.views:this.pageViews=[{id:"grid",label:"Grid",view:new b.SlickGrid({model:this.model,state:this.state.get("view-grid")})},{id:"graph",label:"Graph",view:new b.Graph({model:this.model,state:this.state.get("view-graph")})},{id:"map",label:"Map",view:new b.Map({model:this.model,state:this.state.get("view-map")})},{id:"timeline",label:"Timeline",view:new b.Timeline({model:this.model,state:this.state.get("view-timeline")})},{id:"transform",label:"Transform",view:new b.Transform({model:this.model})}],c.sidebarViews?this.sidebarViews=c.sidebarViews:this.sidebarViews=[{id:"filterEditor",label:"Filters",view:new b.FilterEditor({model:this.model})},{id:"fieldsView",label:"Fields",view:new b.Fields({model:this.model})}],this.render(),this._bindStateChanges(),this._bindFlashNotifications(),this.state.get("readOnly")&&this.setReadOnly(),this.state.get("currentView")?this.updateNav(this.state.get("currentView")):this.updateNav(this.pageViews[0].id),this.model.bind("query:start",function(){d.notify({loader:!0,persist:!0})}),this.model.bind("query:done",function(){d.clearNotifications(),d.el.find(".doc-count").text(d.model.recordCount||"Unknown")}),this.model.bind("query:fail",function(a){d.clearNotifications();var b="";typeof a=="string"?b=a:typeof a=="object"?(a.title&&(b=a.title+": "),a.message&&(b+=a.message)):b="There was an error querying the backend",d.notify({message:b,category:"error",persist:!0})}),this.model.queryState.set(d.state.get("query"),{silent:!0}),this.model.fetch().fail(function(a){d.notify({message:a.message,category:"error",persist:!0})})},setReadOnly:function(){this.el.addClass("recline-read-only")},render:function(){var b=this.model.toTemplateJSON();b.views=this.pageViews,b.sidebarViews=this.sidebarViews;var c=Mustache.render(this.template,b);a(this.el).html(c);var d=this.el.find(".data-view-container"),e=this.el.find(".data-view-sidebar");_.each(this.pageViews,function(a,b){a.view.render(),d.append(a.view.el),a.view.elSidebar&&e.append(a.view.elSidebar)}),_.each(this.sidebarViews,function(a){this["$"+a.id]=a.view.el,e.append(a.view.el)},this);var f=new recline.View.Pager({model:this.model.queryState});this.el.find(".recline-results-info").after(f.el);var g=new recline.View.QueryEditor({model:this.model.queryState});this.el.find(".query-editor-here").append(g.el)},updateNav:function(a){this.el.find(".navigation a").removeClass("active");var b=this.el.find('.navigation a[data-view="'+a+'"]');b.addClass("active"),_.each(this.pageViews,function(b,c){b.id===a?(b.view.el.show(),b.view.elSidebar&&b.view.elSidebar.show(),b.view.show&&b.view.show()):(b.view.el.hide(),b.view.elSidebar&&b.view.elSidebar.hide(),b.view.hide&&b.view.hide())})},_onMenuClick:function(b){b.preventDefault();var c=a(b.target).attr("data-action");this["$"+c].toggle()},_onSwitchView:function(b){b.preventDefault();var c=a(b.target).attr("data-view");this.updateNav(c),this.state.set({currentView:c})},_setupState:function(a){var c=this,d=b.parseHashQueryString(),e=d.reclineQuery;e=e?JSON.parse(e):c.model.queryState.toJSON();var f=d["view-graph"]||d.graph;f=f?JSON.parse(f):{};var g=_.extend({query:e,"view-graph":f,backend:this.model.backend.__type__,url:this.model.get("url"),dataset:this.model.toJSON(),currentView:null,readOnly:!1},a);this.state=new recline.Model.ObjectState(g)},_bindStateChanges:function(){var a=this;this.model.queryState.bind("change",function(){a.state.set({query:a.model.queryState.toJSON()})}),_.each(this.pageViews,function(b){if(b.view.state&&b.view.state.bind){var c={};c["view-"+b.id]=b.view.state.toJSON(),a.state.set(c),b.view.state.bind("change",function(){var c={};c["view-"+b.id]=b.view.state.toJSON(),a.state.set(c,{silent:!0}),a.state.trigger("change")})}})},_bindFlashNotifications:function(){var a=this;_.each(this.pageViews,function(b){b.view.bind("recline:flash",function(b){a.notify(b)})})},notify:function(b){var c=_.extend({message:"Loading",category:"warning",loader:!1},b),d;c.loader?d='         <div class="alert alert-info alert-loader">           {{message}}           <span class="notification-loader">&nbsp;</span>         </div>':d='         <div class="alert alert-{{category}} fade in" data-alert="alert"><a class="close" data-dismiss="alert" href="#">×</a>           {{message}}         </div>';var e=a(Mustache.render(d,c));e=a(e).appendTo(a(".recline-data-explorer .alert-messages")),b.persist||setTimeout(function(){a(e).fadeOut(1e3,function(){a(this).remove()})},1e3)},clearNotifications:function(){var b=a(".recline-data-explorer .alert-messages .alert");b.fadeOut(1500,function(){a(this).remove()})}}),b.MultiView.restore=function(a){if(a.backend==="memory")var c={backend:"memory",records:[{stub:"this is a stub dataset because we do not restore memory datasets"}]};else var c=_.extend({url:a.url,backend:a.backend},a.dataset);var d=new recline.Model.Dataset(c),e=new b.MultiView({model:d,state:a});return e};var c=/^([^?]+)(\?.*)?/;b.parseHashUrl=function(a){var b=c.exec(a);return b===null?{}:{path:b[1],query:b[2]||""}},b.parseQueryString=function(a){if(!a)return{};var b={},c,d=function(a){return unescape(a.replace(/\+/g," "))},e=/([^&=]+)=?([^&]*)/g;a&&a.length&&a[0]==="?"&&(a=a.slice(1));while(c=e.exec(a))b[d(c[1])]=d(c[2]);return b},b.parseHashQueryString=function(){return q=b.parseHashUrl(window.location.hash).query,b.parseQueryString(q)},b.composeQueryString=function(b){var c="?",d=[];return a.each(b,function(a,b){typeof b=="object"&&(b=JSON.stringify(b)),d.push(a+"="+encodeURIComponent(b))}),c+=d.join("&"),c},b.getNewHashForQueryString=function(a){var c=b.composeQueryString(a);return window.location.hash?window.location.hash.split("?")[0].slice(1)+c:c},b.setHashQueryString=function(a){window.location
.hash=b.getNewHashForQueryString(a)}}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){b.SlickGrid=Backbone.View.extend({initialize:function(b){var c=this;this.el=a(this.el),this.discardSelectionEvents=!1,this.el.addClass("recline-slickgrid"),_.bindAll(this,"render"),_.bindAll(this,"onSelectionChanged"),_.bindAll(this,"handleRequestOfRowSelection"),this.resultType="filtered",c.options.resultType!==null&&(this.resultType=c.options.resultType),this.model.records.bind("add",this.render),this.model.records.bind("reset",this.render),this.model.records.bind("remove",this.render),this.model.queryState.bind("selection:done",this.handleRequestOfRowSelection);var d=_.extend({hiddenColumns:[],visibleColumns:[],columnsOrder:[],columnsSort:{},columnsWidth:[],fitColumns:!1},b.state);this.state=new recline.Model.ObjectState(d)},events:{},render:function(){function bd(){if(a.model.getRecords(a.resultType).length>0){var b=a.el.parent();typeof b!="undefined"&&b!=null&&(b[0].style&&b[0].style.height&&b[0].style.height.indexOf("%")>0||b.hasClass("h100"))&&(a.el.height(a.el.parent()[0].offsetHeight),a.grid.invalidateAllRows(),a.grid.resizeCanvas(),a.grid.render())}}console.log("View.Slickgrid: render");var a=this,b={enableCellNavigation:!0,enableColumnReorder:!0,enableExpandCollapse:!0,explicitInitialization:!0,syncColumnCellResize:!0,forceFitColumns:this.state.get("fitColumns"),useInnerChart:this.state.get("useInnerChart"),innerChartMax:this.state.get("innerChartMax"),useStripedStyle:this.state.get("useStripedStyle"),useCondensedStyle:this.state.get("useCondensedStyle"),useHoverStyle:this.state.get("useHoverStyle"),showLineNumbers:this.state.get("showLineNumbers"),showTotals:this.state.get("showTotals"),showPartitionedData:this.state.get("showPartitionedData"),selectedCellFocus:this.state.get("selectedCellFocus")},c=[],d=function(b,c,d,e,f){var g=a.model.getFields(a.resultType).get(e.id);return g.renderer?g.renderer(d,g,f):d};if(b.showLineNumbers==1&&a.model.getRecords(a.resultType).length>0){var e={id:"lineNumberField",name:"#",field:"lineNumberField",sortable:b.showPartitionedData?!1:!0,maxWidth:80,formatter:Slick.Formatters.FixedCellFormatter};c.push(e)}var f=[],g=this.state.get("columnsOrder");if(b.showPartitionedData){var h=function(a){if(a&&a.constructor&&a.constructor.toString){var b=a.constructor.toString().match(/function\s*(\w+)/);if(b&&b.length==2)return b[1]}return undefined};if(h(a.model)!="VirtualDataset")throw"Slickgrid exception: showPartitionedData option can only be used on a partitioned virtualmodel! Exiting";var i=b.showPartitionedData.measures[0].field,j=b.showPartitionedData.partition,k=a.model.getPartitionedFields(j,i),l=k[0].id;f=a.model.attributes.aggregation.dimensions.concat([b.showPartitionedData.partition]).concat(_.map(b.showPartitionedData.measures,function(a){return a.field+"_"+a.aggregation}));var m=a.model.attributes.aggregation.dimensions.concat([l]).concat(_.map(b.showPartitionedData.measures,function(a){return a.field+"_"+a.aggregation})),n=this.state.get("columnsOrder");if(typeof n=="undefined"||n==null||n.length==0)g=m;var o={id:l,name:b.showPartitionedData.partition,field:b.showPartitionedData.partition,sortable:!1,minWidth:80,formatter:d},p=_.find(a.state.get("columnsWidth"),function(a){return a.column==field.id});p&&(e.width=p.width),c.push(o)}_.each(a.model.getFields(a.resultType).toJSON(),function(e){var g={id:e.id,name:e.label,field:e.id,sortable:b.showPartitionedData?!1:!0,minWidth:80,formatter:d},h=_.find(a.state.get("columnsWidth"),function(a){return a.column==e.id});h&&(g.width=h.width),b.showPartitionedData?(_.contains(f,e.id)||e["id"]==l&&e["field"]==b.showPartitionedData.partition)&&c.push(g):c.push(g)}),b.useInnerChart==1&&a.model.getRecords(a.resultType).length>0&&c.push({name:a.state.get("innerChartHeader"),id:"innerChart",field:"innerChart",sortable:!1,alignLeft:!0,minWidth:150,formatter:Slick.Formatters.TwinBarFormatter}),a.state.get("fieldLabels")&&a.state.get("fieldLabels").length>0&&_.each(a.state.get("fieldLabels"),function(a){for(var b in c)c[b].id==a.id&&(c[b].name=a.label)});var q=[];a.state.get("visibleColumns").length>0?(q=c.filter(function(c){return _.indexOf(a.state.get("visibleColumns"),c.id)>=0||b.showLineNumbers==1&&c.id=="lineNumberField"}),a.state.get("useInnerChart")==1&&a.model.getRecords(a.resultType).length>0&&q.push(c[c.length-1])):q=c.filter(function(b){return _.indexOf(a.state.get("hiddenColumns"),b.id)==-1}),g&&(q=q.sort(function(a,b){return _.indexOf(g,a.id)>_.indexOf(g,b.id)?1:-1}),c=c.sort(function(a,b){return _.indexOf(g,a.id)>_.indexOf(g,b.id)?1:-1}));var r=[];for(var s=c.length-1;s>=0;s--)_.indexOf(_.pluck(q,"id"),c[s].id)==-1&&r.push(c.splice(s,1)[0]);c=c.concat(r);var t=0,u=function(a){var b=""+parseInt(a),c=b.length;if(c<=1)return 10;var d=parseInt(b.charAt(0)),e=parseInt(b.charAt(1));return e<5?(d+.5)*Math.pow(10,c-1):(d+1)*Math.pow(10,c-1)},v=a.state.get("innerChartSerie1"),w=a.state.get("innerChartSerie2");a.state.get("useInnerChart")==1&&v!=null&&w!=null&&a.model.getRecords(a.resultType).length>0&&(_.each(a.model.getRecords(a.resultType),function(b){var c={};_.each(a.model.getFields(a.resultType).models,function(a){c[a.id]=b.getFieldValue(a);if(a.id==v||a.id==w){var d=Math.abs(parseFloat(c[a.id]));d>t&&(t=d)}})}),t=u(t),b.innerChartMax=t);var x=[],y=[],z=[],A=0;if(b.showPartitionedData){var j=b.showPartitionedData.partition,B=a.model.attributes.aggregation.dimensions,C=a.model.getRecords(a.resultType),D=[];for(var E in B){var F=B[E],G=_.map(C,function(a){return a.attributes[F]});D[E]=_.uniq(G)}var i=b.showPartitionedData.measures[0].field,k=a.model.getPartitionedFields(j,i),H=_.map(k,function(a){return a.attributes.partitionValue}),I=_.uniq(H),J={},K=!1;B.length==1&&(K=!0,D[1]=[""],B[1]="___fake____");for(var L in D[0]){J={};var M=B[0];for(var N in D[1]){J={};var O=B[1],P=_.find(C,function(a){return a.attributes[M]==D[0][L]&&(K||a.attributes[O]==D[1][N])});for(var Q in I){J={},N==0&&Q==0&&(J[M]=D[0][L]),Q==0&&(J[O]=D[1][N]),J[j]=I[Q];for(var R in b.showPartitionedData.measures){var S=b.showPartitionedData.measures[R],T=S.field,U=a.model.getPartitionedFields(j,T),V=_.find(U,function(a){return a.attributes.partitionValue==I[Q]});if(V)if(P){var W=P.getFieldValue(V);W?J[T+"_"+S.aggregation]=P.getFieldValue(V):J[T+"_"+S.aggregation]=0}else J[T+"_"+S.aggregation]=0}b.showLineNumbers==1&&(J.lineNumberField=A),x.push(J)}if(b.showPartitionedData.showSubTotals){J={},J[j]="<b>Total(s)</b>";for(var R in b.showPartitionedData.measures){var S=b.showPartitionedData.measures[R],T=S.field+"_"+S.aggregation,V=_.find(a.model.getFields(a.resultType).models,function(a){return a.attributes.id==T});if(V&&P){var W=P.getFieldValue(V);W?J[T]="<b>"+P.getFieldValue(V)+"</b>":J[T]="<b>0</b>"}else J[T]="<b>0</b>"}z.push(x.length),x.push(J)}}}}else _.each(a.model.getRecords(a.resultType),function(c){c.is_selected&&y.push(A);var d={schema_colors:[]};_.each(a.model.getFields(a.resultType).models,function(a){d[a.id]=c.getFieldValue(a),v!=null&&a.id==v&&(d.schema_colors[0]=c.getFieldColor(a)),w!=null&&a.id==w&&(d.schema_colors[1]=c.getFieldColor(a))}),a.state.get("useInnerChart")==1&&v!=null&&w!=null&&(d.innerChart=[d[v],d[w],t]),x.push(d),A++,b.showLineNumbers==1&&(d.lineNumberField=A)});if(b.showTotals&&a.model.records.length>0){b.totals={};var X=a.model.getRecords("totals");for(var Y in b.showTotals){var Z=b.showTotals[Y],$=a.model.getField_byAggregationFunction("totals"+(Z.filtered?"_filtered":""),Z.field,Z.aggregation);typeof $!="undefined"&&(b.totals[Z.field]=X[0].getFieldValue($))}}this.options.actions!=null&&typeof this.options.actions!="undefined"&&_.each(this.options.actions,function(a){_.indexOf(a.event,"hover")>=0&&(b.trackMouseHover=!0)}),x.getItemMetadata=function(a){if(_.contains(z,a))return{selectable:!1}},this.grid=new Slick.Grid(this.el,x,q,b);var ba=["s-table"];b.useHoverStyle&&ba.push("s-table-hover"),b.useCondensedStyle&&ba.push("s-table-condensed"),b.useStripedStyle&&ba.push("s-table-striped"),this.grid.addClassesToGrid(ba),this.grid.removeClassesFromGrid(["ui-widget"]),this.grid.setSelectionModel(new Slick.RowSelectionModel),this.grid.getSelectionModel().setSelectedRows(y),this.grid.onSelectedRowsChanged.subscribe(function(b,c){a.discardSelectionEvents||a.onSelectionChanged(c.rows),a.discardSelectionEvents=!1});var bb=this.model.queryState.get("sort");this.grid.onSort.subscribe(function(b,c){var d=c.sortAsc?"asc":"desc",e=[{field:c.sortCol.field,order:d}];a.model.query({sort:e})}),this.grid.onColumnsReordered.subscribe(function(b,c){a.state.set({columnsOrder:_.pluck(a.grid.getColumns(),"id")})}),this.grid.onColumnsResized.subscribe(function(b,c){var d=c.grid.getColumns(),e=c.grid.getOptions().defaultColumnWidth,f=[];_.each(d,function(a){a.width!=e&&f.push({column:a.id,width:a.width})}),a.state.set({columnsWidth:f})}),this.grid.onRowHoverIn.subscribe(function(b,c){var d=[];d.push(a.model.records.models[c.row]);var e=a.options.actions;e.forEach(function(a){a.action.doAction(d,a.mapping)})});var bc=new Slick.Controls.ColumnPicker(c,this.grid,_.extend(b,{state:this.state}));return a.visible?(a.grid.init(),a.rendered=!0):a.rendered=!1,bd(),nv.utils.windowResize(bd),this},handleRequestOfRowSelection:function(){this.discardSelectionEvents=!0;var a=[],b=this.model.getRecords(self.resultType),c;for(row in b)b[row].is_selected&&(a.push(row),c=row);this.grid.getSelectionModel().setSelectedRows(a),c&&this.options.state.selectedCellFocus&&this.grid.scrollRowToTop(c)},onSelectionChanged:function(a){var b=this,c=[];_.each(a,function(a){c.push(b.model.records.models[a])});var d=this.options.actions;d!=null&&d.forEach(function(a){a.action.doAction(c,a.mapping)})},show:function(){this.rendered||(this.grid||this.render(),this.grid.init(),this.rendered=!0),this.visible=!0},hide:function(){this.visible=!1}})}(jQuery,recline.View),function(a){function b(b,c,d){function h(){c.onHeaderContextMenu.subscribe(i),d=a.extend({},g,d),e=a('<ul class="dropdown-menu slick-contextmenu" style="display:none;position:absolute;z-index:20;" />').appendTo(document.body),e.bind("mouseleave",function(b){a(this).fadeOut(d.fadeSpeed)}),e.bind("click",j)}function i(g,h){g.preventDefault(),e.empty(),f=[];var i,j;for(var k=0;k<b.length;k++)i=a("<li />").appendTo(e),j=a('<input type="checkbox" />').data("column-id",b[k].id).attr("id","slick-column-vis-"+b[k].id),f.push(j),c.getColumnIndex(b[k].id)!=null&&j.attr("checked","checked"),j.appendTo(i),a("<label />").text(b[k].name).attr("for","slick-column-vis-"+b[k].id).appendTo(i);a("<li/>").addClass("divider").appendTo(e),i=a("<li />").data("option","autoresize").appendTo(e),j=a('<input type="checkbox" />').data("option","autoresize").attr("id","slick-option-autoresize"),j.appendTo(i),a("<label />").text("Force fit columns").attr("for","slick-option-autoresize").appendTo(i),c.getOptions().forceFitColumns&&j.attr("checked","checked"),e.css("top",g.pageY-10).css("left",g.pageX-10).fadeIn(d.fadeSpeed)}function j(e){if(a(e.target).data("option")=="autoresize"){var g;if(a(e.target).is("li")){var h=a(e.target).find("input").first();g=!h.is(":checked"),h.attr("checked",g)}else g=e.target.checked;g?(c.setOptions({forceFitColumns:!0}),c.autosizeColumns()):c.setOptions({forceFitColumns:!1}),d.state.set({fitColumns:g});return}if(a(e.target).is("li")&&!a(e.target).hasClass("divider")||a(e.target).is("input")){if(a(e.target).is("li")){var h=a(e.target).find("input").first();h.attr("checked",!h.is(":checked"))}var i=[],j=[];a.each(f,function(c,d){a(this).is(":checked")?i.push(b[c]):j.push(b[c].id)});if(!i.length){a(e.target).attr("checked","checked");return}c.setColumns(i),d.state.set({hiddenColumns:j})}}var e,f,g={fadeSpeed:250};h()}a.extend(!0,window,{Slick:{Controls:{ColumnPicker:b}}})}(jQuery),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){typeof VMM!="undefined"&&(VMM.debug=!1),b.Timeline=Backbone.View.extend({template:'     <div class="recline-timeline">       <div id="vmm-timeline-id"></div>     </div>   ',startFieldNames:["date","startdate","start","start-date"],endFieldNames:["end","endDate"],elementId:"#vmm-timeline-id",initialize:function(b){var c=this;this.el=a(this.el),this.timeline=new VMM.Timeline,this._timelineIsInitialized=!1,this.model.fields.bind("reset",function(){c._setupTemporalField()}),this.model.records.bind("all",function(){c.reloadData()});var d=_.extend({startField:null,endField:null},b.state);this.state=new recline.Model.ObjectState(d),this._setupTemporalField()},render:function(){var b={},c=Mustache.render(this.template,b);this.el.html(c),a(this.elementId).length>0&&this._initTimeline()},show:function(){this._timelineIsInitialized===!1&&this._initTimeline()},_initTimeline:function(){var a=this.el.find(this.elementId),b=Math.max(this.el.width(),this.el.find(".recline-timeline").width());b&&a.width(b);var c={},d=this._timelineJSON();this.timeline.init(d,this.elementId,c),this._timelineIsInitialized=!0},reloadData:function(){if(this._timelineIsInitialized){var a=this._timelineJSON();this.timeline.reload(a)}},convertRecord:function(a,b){return this._convertRecord(a,b)},_convertRecord:function(a,b){var c=this._parseDate(a.get(this.state.get("startField"))),d=this._parseDate(a.get(this.state.get("endField")));if(c){var e={startDate:c,endDate:d,headline:String(a.get("title")||""),text:a.get("description")||a.summary()};return e}return null},_timelineJSON:function(){var a=this,b={timeline:{type:"default",headline:"",date:[]}};this.model.records.each(function(c){var d=a.convertRecord(c,a.fields);d&&b.timeline.date.push(d)});if(b.timeline.date.length===0){var c={startDate:"2000,1,1",headline:"No data to show!"};b.timeline.date.push(c)}return b},_parseDate:function(a){if(!a)return null;var b=a.trim();return b=b.replace(/(\d)th/g,"$1"),b=b.replace(/(\d)st/g,"$1"),b=b.trim()?moment(b):null,b.toDate()=="Invalid Date"?null:(b=b.subtract("minutes",b.zone()),b.toDate())},_setupTemporalField:function(){this.state.set({startField:this._checkField(this.startFieldNames),endField:this._checkField(this.endFieldNames)})},_checkField:function(a){var b=this.model.fields.pluck("id");for(var c=0;c<a.length;c++)for(var d=0;d<b.length;d++)if(b[d].toLowerCase()==a[c].toLowerCase())return b[d];return null}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){b.Transform=Backbone.View.extend({template:'     <div class="recline-transform">       <div class="script">         <h2>           Transform Script           <button class="okButton btn btn-primary">Run on all records</button>         </h2>         <textarea class="expression-preview-code"></textarea>       </div>       <div class="expression-preview-parsing-status">         No syntax error.       </div>       <div class="preview">         <h3>Preview</h3>         <div class="expression-preview-container"></div>       </div>     </div>   ',events:{"click .okButton":"onSubmit","keydown .expression-preview-code":"onEditorKeydown"},initialize:function(b){this.el=a(this.el)},render:function(){var a=Mustache.render(this.template);this.el.html(a);var b=this.el.find(".expression-preview-code");if(this.model.fields.length>0)var c=this.model.fields.models[0].id;else var c="unknown";b.val("function(doc) {\n  doc['"+c+"'] = doc['"+c+"'];\n  return doc;\n}"),b.keydown()},onSubmit:function(a){var b=this,c=this.el.find(".expression-preview-code").val(),d=recline.Data.Transform.evalFunction(c);if(d.errorMessage){this.trigger("recline:flash",{message:"Error with function! "+d.errorMessage});return}this.model.transform(d)},editPreviewTemplate:'       <table class="table table-condensed table-bordered before-after">       <thead>       <tr>         <th>Field</th>         <th>Before</th>         <th>After</th>       </tr>       </thead>       <tbody>       {{#row}}       <tr>         <td>           {{field}}         </td>         <td class="before {{#different}}different{{/different}}">           {{before}}         </td>         <td class="after {{#different}}different{{/different}}">           {{after}}         </td>       </tr>       {{/row}}       </tbody>       </table>   ',onEditorKeydown:function(a){var b=this;window.setTimeout(function(){var c=b.el.find(".expression-preview-parsing-status"),d=recline.Data.Transform.evalFunction(a.target.value);if(!d.errorMessage){c.text("No syntax error.");var f=b.model.records.map(function(a){return a.toJSON()}),g=recline.Data.Transform.previewTransform(f,d),h=b.el.find(".expression-preview-container"),i=b.model.fields.toJSON(),j=_.map(g.slice(0,4),function(a){return _.map(i,function(b){return{field:b.id,before:a.before[b.id],after:a.after[b.id],different:!_.isEqual(a.before[b.id],a.after[b.id])}})});h.html(""),_.each(j,function(a){var c=Mustache.render(b.editPreviewTemplate,{row:a});h.append(c)})}else c.text(d.errorMessage)},1,!0)}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){b.CurrentFilter=Backbone.View.extend({template:'    \t<script>     \t$(function() {     \t\t$(".chzn-select-deselect").chosen({allow_single_deselect:true});     \t});     \t</script>       <div">         <fieldset data-filter-field="{{field}}" data-filter-id="{{id}}"> \t\t\t<select class="chzn-select-deselect data-control-id" multiple data-placeholder="{{label}}">             {{#values}}             <option value="{{dataset_index}}-{{filter_index}}" selected>{{val}}</option>             {{/values}}           </select>         </fieldset>       </div>',events:{"change .chzn-select-deselect":"onFilterValueChanged"},initialize:function(b){var c=this;this.el=a(this.el),_.bindAll(this,"render"),this._sourceDatasets=b.models,this.uid=b.id||Math.floor(Math.random()*1e5),_.each(this._sourceDatasets,function(a){a.bind("query:done",c.render),a.queryState.bind("selection:done",c.render)})},render:function(){var a=this,b={id:a.uid,label:"Active filters"},c=[];_.each(a._sourceDatasets,function(b,d){_.each(b.queryState.getFilters(),function(e,f){var g={dataset_index:d,filter_index:f};g.val=a.filterDescription[e.type](e,b),c.push(g)})}),b.values=c;var d=Mustache.render(a.template,b);this.el.html(d)},filterDescription:{term:function(a,b){return b.fields.get(a.field).attributes.label+": "+a.term},range:function(a,b){return b.fields.get(a.field).attributes.label+": "+a.start+"-"+a.stop},list:function(a,b){var c=b.fields.get(a.field).attributes.label+": ";return _.each(a.list,function(a,b){b>0&&(c+=","),c+=a}),c}},onFilterValueChanged:function(b){var c=this;b.preventDefault();var d=a(b.target).parent(),e=d.find(".data-control-id")[0][0].value.split("-"),f=e[0],g=e[1];c._sourceDatasets[f].queryState.removeFilter(g)}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){b.FacetViewer=Backbone.View.extend({className:"recline-facet-viewer",template:'     <div class="facets">       {{#facets}}       <div class="facet-summary" data-facet="{{id}}">         <h3>           {{id}}         </h3>         <ul class="facet-items">         {{#terms}}           <li><a class="facet-choice js-facet-filter" data-value="{{term}}" href="#{{term}}">{{term}} ({{count}})</a></li>         {{/terms}}         {{#entries}}           <li><a class="facet-choice js-facet-filter" data-value="{{time}}">{{term}} ({{count}})</a></li>         {{/entries}}         </ul>       </div>       {{/facets}}     </div>   ',events:{"click .js-facet-filter":"onFacetFilter"},initialize:function(b){_.bindAll(this,"render"),this.el=a(this.el),this.model.facets.bind("all",this.render),this.model.fields.bind("all",this.render),this.render()},render:function(){var a={fields:this.model.fields.toJSON()};a.facets=_.map(this.model.facets.toJSON(),function(a){return a._type==="date_histogram"&&(a.entries=_.map(a.entries,function(a){return a.term=(new Date(a.time)).toDateString(),a})),a});var b=Mustache.render(this.template,a);this.el.html(b),this.model.facets.length>0?this.el.show():this.el.hide()},onHide:function(a){a.preventDefault(),this.el.hide()},onFacetFilter:function(b){b.preventDefault();var c=a(b.target),d=c.closest(".facet-summary").attr("data-facet"),e=c.attr("data-value");this.model.queryState.addFilter({type:"term",field:d,term:e}),this.model.query()}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){b.Fields=Backbone.View.extend({className:"recline-fields-view",template:'     <div class="accordion fields-list well">     <h3>Fields <a href="#" class="js-show-hide">+</a></h3>     {{#fields}}       <div class="accordion-group field">         <div class="accordion-heading">           <i class="icon-file"></i>           <h4>             {{label}}             <small>               {{type}}               <a class="accordion-toggle" data-toggle="collapse" href="#collapse{{id}}"> &raquo; </a>             </small>           </h4>         </div>         <div id="collapse{{id}}" class="accordion-body collapse in">           <div class="accordion-inner">             {{#facets}}             <div class="facet-summary" data-facet="{{id}}">               <ul class="facet-items">               {{#terms}}                 <li class="facet-item"><span class="term">{{term}}</span> <span class="count">[{{count}}]</span></li>               {{/terms}}               </ul>             </div>             {{/facets}}             <div class="clear"></div>           </div>         </div>       </div>     {{/fields}}     </div>   ',events:{"click .js-show-hide":"onShowHide"},initialize:function(b){var c=this;this.el=a(this.el),_.bindAll(this,"render"),this.model.fields.bind("reset",function(a){c.model.fields.each(function(a){a.facets.unbind("all",c.render),a.facets.bind("all",c.render)}),c.model.getFieldsSummary(),c.render()}),this.render()},render:function(){var a=this,b={fields:[]};this.model.fields.each(function(a){var c=a.toJSON();c.facets=a.facets.toJSON(),b.fields.push(c)});var c=Mustache.render(this.template,b);this.el.html(c),this.el.find(".collapse").collapse("hide")},onShowHide:function(b){b.preventDefault();var c=a(b.target);this.el.find(".accordion-body").addClass("collapse"),c.text()==="+"?(this.el.find(".collapse").collapse("show"),c.text("-")):(this.el.find(".collapse").collapse("hide"),c.text("+"))}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){b.FilterEditor=Backbone.View.extend({className:"recline-filter-editor well",template:'     <div class="filters">       <h3>Filters</h3>       <a href="#" class="js-add-filter">Add filter</a>       <form class="form-stacked js-add" style="display: none;">         <fieldset>           <label>Field</label>           <select class="fields">             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}           </select>           <label>Filter type</label>           <select class="filterType">             <option value="term">Value</option>             <option value="range">Range</option>             <option value="geo_distance">Geo distance</option>           </select>           <button type="submit" class="btn">Add</button>         </fieldset>       </form>       <form class="form-stacked js-edit">         {{#filters}}           {{{filterRender}}}         {{/filters}}         {{#filters.length}}         <button type="submit" class="btn">Update</button>         {{/filters.length}}       </form>     </div>   ',filterTemplates:{term:'       <div class="filter-{{type}} filter">         <fieldset>           <legend>             {{field}} <small>{{type}}</small>             <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           </legend>           <input type="text" value="{{term}}" name="term" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     ',range:'       <div class="filter-{{type}} filter">         <fieldset>           <legend>             {{field}} <small>{{type}}</small>             <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           </legend>           <label class="control-label" for="">From</label>           <input type="text" value="{{start}}" name="start" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />           <label class="control-label" for="">To</label>           <input type="text" value="{{stop}}" name="stop" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     ',geo_distance:'       <div class="filter-{{type}} filter">         <fieldset>           <legend>             {{field}} <small>{{type}}</small>             <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           </legend>           <label class="control-label" for="">Longitude</label>           <input type="text" value="{{point.lon}}" name="lon" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />           <label class="control-label" for="">Latitude</label>           <input type="text" value="{{point.lat}}" name="lat" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />           <label class="control-label" for="">Distance (km)</label>           <input type="text" value="{{distance}}" name="distance" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     '},events:{"click .js-remove-filter":"onRemoveFilter","click .js-add-filter":"onAddFilterShow","submit form.js-edit":"onTermFiltersUpdate","submit form.js-add":"onAddFilter"},initialize:function(){this.el=a(this.el),_.bindAll(this,"render"),this.model.fields.bind("all",this.render),this.model.queryState.bind("change",this.render),this.model.queryState.bind("change:filters:new-blank",this.render),this.render()},render:function(){var b=this,c=a.extend(!0,{},this.model.queryState.toJSON());c.filters=_.map(c.filters,function(a,b){return a.id=b,a}),c.fields=this.model.fields.toJSON(),c.filterRender=function(){return Mustache.render(b.filterTemplates[this.type],this)};var d=Mustache.render(this.template,c);this.el.html(d)},onAddFilterShow:function(b){b.preventDefault();var c=a(b.target);c.hide(),this.el.find("form.js-add").show()},onAddFilter:function(b){b.preventDefault();var c=a(b.target);c.hide();var d=c.find("select.filterType").val(),e=c.find("select.fields").val();this.model.queryState.addFilter({type:d,field:e}),this.render()},onRemoveFilter:function(b){b.preventDefault();var c=a(b.target),d=c.attr("data-filter-id");this.model.queryState.removeFilter(d)},onTermFiltersUpdate:function(b){var c=this;b.preventDefault();var d=c.model.queryState.get("filters"),e=a(b.target);_.each(e.find("input"),function(b){var c=a(b),e=c.attr("data-filter-type"),f=c.attr("data-filter-field"),g=parseInt(c.attr("data-filter-id")),h=c.attr("name"),i=c.val();switch(e){case"term":d[g].term=i;break;case"range":d[g][h]=i;break;case"geo_distance":h==="distance"?d[g].distance=parseFloat(i):d[g].point[h]=parseFloat(i)}}),c.model.queryState.set({filters:d}),c.model.queryState.trigger("change")}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){b.Pager=Backbone.View.extend({className:"recline-pager",template:'     <div class="pagination">       <ul>         <li class="prev action-pagination-update"><a href="">&laquo;</a></li>         <li class="active"><a><input name="from" type="text" value="{{from}}" /> &ndash; <input name="to" type="text" value="{{to}}" /> </a></li>         <li class="next action-pagination-update"><a href="">&raquo;</a></li>       </ul>     </div>   ',events:{"click .action-pagination-update":"onPaginationUpdate","change input":"onFormSubmit"},initialize:function(){_.bindAll(this,"render"),this.el=a(this.el),this.model.bind("change",this.render),this.render()},onFormSubmit:function(a){a.preventDefault();var b=parseInt(this.el.find('input[name="from"]').val()),c=parseInt(this.el.find('input[name="to"]').val())-b;this.model.set({size:c,from:b})},onPaginationUpdate:function(b){b.preventDefault();var c=a(b.target),d=0;c.parent().hasClass("prev")?d=this.model.get("from")-Math.max(0,this.model.get("size")):d=this.model.get("from")+this.model.get("size"),this.model.set({from:d})},render:function(){var a=this.model.toJSON();a.to=this.model.get("from")+this.model.get("size");var b=Mustache.render(this.template,a);this.el.html(b)}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){b.QueryEditor=Backbone.View.extend({className:"recline-query-editor",template:'     <form action="" method="GET" class="form-inline">       <div class="input-prepend text-query">         <span class="add-on"><i class="icon-search"></i></span>         <input type="text" name="q" value="{{q}}" class="span2" placeholder="Search data ..." class="search-query" />       </div>       <button type="submit" class="btn">Go &raquo;</button>     </form>   ',events:{"submit form":"onFormSubmit"},initialize:function(){_.bindAll(this,"render"),this.el=a(this.el),this.model.bind("change",this.render),this.render()},onFormSubmit:function(a){a.preventDefault();var b=this.el.find(".text-query input").val();this.model.set({q:b})},render:function(){var a=this.model.toJSON(),b=Mustache.render(this.template,a);this.el.html(b)}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(a,b){b.VisualSearch=Backbone.View.extend({template:'<div id="search_box_container"></div><div id="search_query">&nbsp;</div>',initialize:function(b){var c=this;this.el=a(this.el),_.bindAll(this,"render","redraw")},render:function(){var b=this,c={};c.viewId=b.uid;var d=Mustache.render(this.template,c);return a(this.el).html(d),this},redraw:function(){var b=this;console.log(a().jquery),console.log(a.ui.version),window.visualSearch=VS.init({container:a("#search_box_container"),query:'country: "South Africa" account: 5-samuel "U.S. State": California',showFacets:!0,unquotable:["text","account","filter","access"],callbacks:{search:function(b,c){var d=a("#search_query");d.stop().animate({opacity:1},{duration:300,queue:!1}),d.html('<span class="raquo">&raquo;</span> You searched for: <b>'+c.serialize()+"</b>"),clearTimeout(window.queryHideDelay),window.queryHideDelay=setTimeout(function(){d.animate({opacity:0},{duration:1e3,queue:!1})},2e3)},valueMatches:function(a,b,c){switch(a){case"account":c([{value:"1-amanda",label:"Amanda"},{value:"2-aron",label:"Aron"},{value:"3-eric",label:"Eric"},{value:"4-jeremy",label:"Jeremy"},{value:"5-samuel",label:"Samuel"},{value:"6-scott",label:"Scott"}]);break;case"filter":c(["published","unpublished","draft"]);break;case"access":c(["public","private","protected"]);break;case"title":c(["Pentagon Papers","CoffeeScript Manual","Laboratory for Object Oriented Thinking","A Repository Grows in Brooklyn"]);break;case"city":c(["Cleveland","New York City","Brooklyn","Manhattan","Queens","The Bronx","Staten Island","San Francisco","Los Angeles","Seattle","London","Portland","Chicago","Boston"]);break;case"U.S. State":c(["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","District of Columbia","Florida","Georgia","Guam","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Puerto Rico","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Virgin Islands","Washington","West Virginia","Wisconsin","Wyoming"]);break;case"country":c(["China","India","United States","Indonesia","Brazil","Pakistan","Bangladesh","Nigeria","Russia","Japan","Mexico","Philippines","Vietnam","Ethiopia","Egypt","Germany","Turkey","Iran","Thailand","D. R. of Congo","France","United Kingdom","Italy","Myanmar","South Africa","South Korea","Colombia","Ukraine","Spain","Tanzania","Sudan","Kenya","Argentina","Poland","Algeria","Canada","Uganda","Morocco","Iraq","Nepal","Peru","Afghanistan","Venezuela","Malaysia","Uzbekistan","Saudi Arabia","Ghana","Yemen","North Korea","Mozambique","Taiwan","Syria","Ivory Coast","Australia","Romania","Sri Lanka","Madagascar","Cameroon","Angola","Chile","Netherlands","Burkina Faso","Niger","Kazakhstan","Malawi","Cambodia","Guatemala","Ecuador","Mali"
,"Zambia","Senegal","Zimbabwe","Chad","Cuba","Greece","Portugal","Belgium","Czech Republic","Tunisia","Guinea","Rwanda","Dominican Republic","Haiti","Bolivia","Hungary","Belarus","Somalia","Sweden","Benin","Azerbaijan","Burundi","Austria","Honduras","Switzerland","Bulgaria","Serbia","Israel","Tajikistan","Hong Kong","Papua New Guinea","Togo","Libya","Jordan","Paraguay","Laos","El Salvador","Sierra Leone","Nicaragua","Kyrgyzstan","Denmark","Slovakia","Finland","Eritrea","Turkmenistan"],{preserveOrder:!0})}},facetMatches:function(a){a(["account","filter","access","title",{label:"city",category:"location"},{label:"address",category:"location"},{label:"country",category:"location"},{label:"U.S. State",category:"location"}])}}})},doActions:function(a,b){_.each(a,function(a){a.action.doAction(b,a.mapping)})},getActionsForEvent:function(a){var b=this,c=[];return _.each(b.options.actions,function(b){_.contains(b.event,a)&&c.push(b)}),c}})}(jQuery,recline.View);